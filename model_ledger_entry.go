/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// LedgerEntry 
type LedgerEntry struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// ID of the customer profile set by your integration layer.  **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`. 
	ProfileId string `json:"profileId"`
	// The ID of the Talon.One account that owns this profile.
	AccountId int32 `json:"accountId"`
	// ID of the ledger.
	LoyaltyProgramId int32 `json:"loyaltyProgramId"`
	// ID of the related event.
	EventId int32 `json:"eventId"`
	// Amount of loyalty points.
	Amount int32 `json:"amount"`
	// reason for awarding/deducting points.
	Reason string `json:"reason"`
	// Expiry date of the points.
	ExpiryDate time.Time `json:"expiryDate"`
	// The ID of the balancing ledgerEntry.
	ReferenceId *int32 `json:"referenceId,omitempty"`
}

// NewLedgerEntry instantiates a new LedgerEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerEntry(id int32, created time.Time, profileId string, accountId int32, loyaltyProgramId int32, eventId int32, amount int32, reason string, expiryDate time.Time) *LedgerEntry {
	this := LedgerEntry{}
	this.Id = id
	this.Created = created
	this.ProfileId = profileId
	this.AccountId = accountId
	this.LoyaltyProgramId = loyaltyProgramId
	this.EventId = eventId
	this.Amount = amount
	this.Reason = reason
	this.ExpiryDate = expiryDate
	return &this
}

// NewLedgerEntryWithDefaults instantiates a new LedgerEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerEntryWithDefaults() *LedgerEntry {
	this := LedgerEntry{}
	return &this
}

// GetId returns the Id field value
func (o *LedgerEntry) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LedgerEntry) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *LedgerEntry) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *LedgerEntry) SetCreated(v time.Time) {
	o.Created = v
}

// GetProfileId returns the ProfileId field value
func (o *LedgerEntry) GetProfileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *LedgerEntry) SetProfileId(v string) {
	o.ProfileId = v
}

// GetAccountId returns the AccountId field value
func (o *LedgerEntry) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *LedgerEntry) SetAccountId(v int32) {
	o.AccountId = v
}

// GetLoyaltyProgramId returns the LoyaltyProgramId field value
func (o *LedgerEntry) GetLoyaltyProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LoyaltyProgramId
}

// GetLoyaltyProgramIdOk returns a tuple with the LoyaltyProgramId field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetLoyaltyProgramIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoyaltyProgramId, true
}

// SetLoyaltyProgramId sets field value
func (o *LedgerEntry) SetLoyaltyProgramId(v int32) {
	o.LoyaltyProgramId = v
}

// GetEventId returns the EventId field value
func (o *LedgerEntry) GetEventId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetEventIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *LedgerEntry) SetEventId(v int32) {
	o.EventId = v
}

// GetAmount returns the Amount field value
func (o *LedgerEntry) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *LedgerEntry) SetAmount(v int32) {
	o.Amount = v
}

// GetReason returns the Reason field value
func (o *LedgerEntry) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *LedgerEntry) SetReason(v string) {
	o.Reason = v
}

// GetExpiryDate returns the ExpiryDate field value
func (o *LedgerEntry) GetExpiryDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetExpiryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryDate, true
}

// SetExpiryDate sets field value
func (o *LedgerEntry) SetExpiryDate(v time.Time) {
	o.ExpiryDate = v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *LedgerEntry) GetReferenceId() int32 {
	if o == nil || o.ReferenceId == nil {
		var ret int32
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerEntry) GetReferenceIdOk() (*int32, bool) {
	if o == nil || o.ReferenceId == nil {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *LedgerEntry) HasReferenceId() bool {
	if o != nil && o.ReferenceId != nil {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given int32 and assigns it to the ReferenceId field.
func (o *LedgerEntry) SetReferenceId(v int32) {
	o.ReferenceId = &v
}

func (o LedgerEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["profileId"] = o.ProfileId
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["loyaltyProgramId"] = o.LoyaltyProgramId
	}
	if true {
		toSerialize["eventId"] = o.EventId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if true {
		toSerialize["expiryDate"] = o.ExpiryDate
	}
	if o.ReferenceId != nil {
		toSerialize["referenceId"] = o.ReferenceId
	}
	return json.Marshal(toSerialize)
}

type NullableLedgerEntry struct {
	value *LedgerEntry
	isSet bool
}

func (v NullableLedgerEntry) Get() *LedgerEntry {
	return v.value
}

func (v *NullableLedgerEntry) Set(val *LedgerEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerEntry(val *LedgerEntry) *NullableLedgerEntry {
	return &NullableLedgerEntry{value: val, isSet: true}
}

func (v NullableLedgerEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


