/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// LoyaltyCardProfileRegistration struct for LoyaltyCardProfileRegistration
type LoyaltyCardProfileRegistration struct {
	// Integration ID of the customer associated with the card.
	IntegrationId string `json:"integrationId"`
	// Timestamp of the registration to the card.
	Timestamp time.Time `json:"timestamp"`
}

// NewLoyaltyCardProfileRegistration instantiates a new LoyaltyCardProfileRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoyaltyCardProfileRegistration(integrationId string, timestamp time.Time) *LoyaltyCardProfileRegistration {
	this := LoyaltyCardProfileRegistration{}
	this.IntegrationId = integrationId
	this.Timestamp = timestamp
	return &this
}

// NewLoyaltyCardProfileRegistrationWithDefaults instantiates a new LoyaltyCardProfileRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoyaltyCardProfileRegistrationWithDefaults() *LoyaltyCardProfileRegistration {
	this := LoyaltyCardProfileRegistration{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value
func (o *LoyaltyCardProfileRegistration) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *LoyaltyCardProfileRegistration) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *LoyaltyCardProfileRegistration) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetTimestamp returns the Timestamp field value
func (o *LoyaltyCardProfileRegistration) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *LoyaltyCardProfileRegistration) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *LoyaltyCardProfileRegistration) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

func (o LoyaltyCardProfileRegistration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["integrationId"] = o.IntegrationId
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableLoyaltyCardProfileRegistration struct {
	value *LoyaltyCardProfileRegistration
	isSet bool
}

func (v NullableLoyaltyCardProfileRegistration) Get() *LoyaltyCardProfileRegistration {
	return v.value
}

func (v *NullableLoyaltyCardProfileRegistration) Set(val *LoyaltyCardProfileRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableLoyaltyCardProfileRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableLoyaltyCardProfileRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoyaltyCardProfileRegistration(val *LoyaltyCardProfileRegistration) *NullableLoyaltyCardProfileRegistration {
	return &NullableLoyaltyCardProfileRegistration{value: val, isSet: true}
}

func (v NullableLoyaltyCardProfileRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoyaltyCardProfileRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


