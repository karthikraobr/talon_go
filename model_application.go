/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// Application 
type Application struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The exact moment this entity was last modified.
	Modified time.Time `json:"modified"`
	// The ID of the account that owns this entity.
	AccountId int32 `json:"accountId"`
	// The name of this application.
	Name string `json:"name"`
	// A longer description of the application.
	Description *string `json:"description,omitempty"`
	// A string containing an IANA timezone descriptor.
	Timezone string `json:"timezone"`
	// The default currency for new customer sessions.
	Currency string `json:"currency"`
	// The case sensitivity behavior to check coupon codes in the campaigns of this Application.
	CaseSensitivity *string `json:"caseSensitivity,omitempty"`
	// Arbitrary properties associated with this campaign.
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	// Default limits for campaigns created in this application.
	Limits []LimitConfig `json:"limits,omitempty"`
	// Default [priority](https://docs.talon.one/docs/product/applications/setting-up-campaign-priorities) for campaigns created in this Application. 
	CampaignPriority *string `json:"campaignPriority,omitempty"`
	// The strategy used when choosing exclusive campaigns for evaluation.
	ExclusiveCampaignsStrategy *string `json:"exclusiveCampaignsStrategy,omitempty"`
	// The default scope to apply `setDiscount` effects on if no scope was provided with the effect. 
	DefaultDiscountScope *string `json:"defaultDiscountScope,omitempty"`
	// Indicates if discounts should cascade for this Application.
	EnableCascadingDiscounts *bool `json:"enableCascadingDiscounts,omitempty"`
	// Indicates if cart items of quantity larger than one should be separated into different items of quantity one. See [the docs](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items). 
	EnableFlattenedCartItems *bool `json:"enableFlattenedCartItems,omitempty"`
	AttributesSettings *AttributesSettings `json:"attributesSettings,omitempty"`
	// Indicates if this is a live or sandbox Application.
	Sandbox *bool `json:"sandbox,omitempty"`
	// Indicates if this Application supports partial discounts.
	EnablePartialDiscounts *bool `json:"enablePartialDiscounts,omitempty"`
	// The default scope to apply `setDiscountPerItem` effects on if no scope was provided with the effect. 
	DefaultDiscountAdditionalCostPerItemScope *string `json:"defaultDiscountAdditionalCostPerItemScope,omitempty"`
	// An array containing all the loyalty programs to which this application is subscribed.
	LoyaltyPrograms []LoyaltyProgram `json:"loyaltyPrograms"`
}

// NewApplication instantiates a new Application object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplication(id int32, created time.Time, modified time.Time, accountId int32, name string, timezone string, currency string, loyaltyPrograms []LoyaltyProgram) *Application {
	this := Application{}
	this.Id = id
	this.Created = created
	this.Modified = modified
	this.AccountId = accountId
	this.Name = name
	this.Timezone = timezone
	this.Currency = currency
	var campaignPriority string = "universal"
	this.CampaignPriority = &campaignPriority
	var exclusiveCampaignsStrategy string = "listOrder"
	this.ExclusiveCampaignsStrategy = &exclusiveCampaignsStrategy
	this.LoyaltyPrograms = loyaltyPrograms
	return &this
}

// NewApplicationWithDefaults instantiates a new Application object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationWithDefaults() *Application {
	this := Application{}
	var campaignPriority string = "universal"
	this.CampaignPriority = &campaignPriority
	var exclusiveCampaignsStrategy string = "listOrder"
	this.ExclusiveCampaignsStrategy = &exclusiveCampaignsStrategy
	return &this
}

// GetId returns the Id field value
func (o *Application) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Application) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Application) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *Application) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Application) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Application) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *Application) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *Application) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *Application) SetModified(v time.Time) {
	o.Modified = v
}

// GetAccountId returns the AccountId field value
func (o *Application) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Application) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Application) SetAccountId(v int32) {
	o.AccountId = v
}

// GetName returns the Name field value
func (o *Application) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Application) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Application) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Application) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Application) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Application) SetDescription(v string) {
	o.Description = &v
}

// GetTimezone returns the Timezone field value
func (o *Application) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *Application) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *Application) SetTimezone(v string) {
	o.Timezone = v
}

// GetCurrency returns the Currency field value
func (o *Application) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Application) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Application) SetCurrency(v string) {
	o.Currency = v
}

// GetCaseSensitivity returns the CaseSensitivity field value if set, zero value otherwise.
func (o *Application) GetCaseSensitivity() string {
	if o == nil || o.CaseSensitivity == nil {
		var ret string
		return ret
	}
	return *o.CaseSensitivity
}

// GetCaseSensitivityOk returns a tuple with the CaseSensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetCaseSensitivityOk() (*string, bool) {
	if o == nil || o.CaseSensitivity == nil {
		return nil, false
	}
	return o.CaseSensitivity, true
}

// HasCaseSensitivity returns a boolean if a field has been set.
func (o *Application) HasCaseSensitivity() bool {
	if o != nil && o.CaseSensitivity != nil {
		return true
	}

	return false
}

// SetCaseSensitivity gets a reference to the given string and assigns it to the CaseSensitivity field.
func (o *Application) SetCaseSensitivity(v string) {
	o.CaseSensitivity = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Application) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Application) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *Application) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *Application) GetLimits() []LimitConfig {
	if o == nil || o.Limits == nil {
		var ret []LimitConfig
		return ret
	}
	return o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetLimitsOk() ([]LimitConfig, bool) {
	if o == nil || o.Limits == nil {
		return nil, false
	}
	return o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *Application) HasLimits() bool {
	if o != nil && o.Limits != nil {
		return true
	}

	return false
}

// SetLimits gets a reference to the given []LimitConfig and assigns it to the Limits field.
func (o *Application) SetLimits(v []LimitConfig) {
	o.Limits = v
}

// GetCampaignPriority returns the CampaignPriority field value if set, zero value otherwise.
func (o *Application) GetCampaignPriority() string {
	if o == nil || o.CampaignPriority == nil {
		var ret string
		return ret
	}
	return *o.CampaignPriority
}

// GetCampaignPriorityOk returns a tuple with the CampaignPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetCampaignPriorityOk() (*string, bool) {
	if o == nil || o.CampaignPriority == nil {
		return nil, false
	}
	return o.CampaignPriority, true
}

// HasCampaignPriority returns a boolean if a field has been set.
func (o *Application) HasCampaignPriority() bool {
	if o != nil && o.CampaignPriority != nil {
		return true
	}

	return false
}

// SetCampaignPriority gets a reference to the given string and assigns it to the CampaignPriority field.
func (o *Application) SetCampaignPriority(v string) {
	o.CampaignPriority = &v
}

// GetExclusiveCampaignsStrategy returns the ExclusiveCampaignsStrategy field value if set, zero value otherwise.
func (o *Application) GetExclusiveCampaignsStrategy() string {
	if o == nil || o.ExclusiveCampaignsStrategy == nil {
		var ret string
		return ret
	}
	return *o.ExclusiveCampaignsStrategy
}

// GetExclusiveCampaignsStrategyOk returns a tuple with the ExclusiveCampaignsStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetExclusiveCampaignsStrategyOk() (*string, bool) {
	if o == nil || o.ExclusiveCampaignsStrategy == nil {
		return nil, false
	}
	return o.ExclusiveCampaignsStrategy, true
}

// HasExclusiveCampaignsStrategy returns a boolean if a field has been set.
func (o *Application) HasExclusiveCampaignsStrategy() bool {
	if o != nil && o.ExclusiveCampaignsStrategy != nil {
		return true
	}

	return false
}

// SetExclusiveCampaignsStrategy gets a reference to the given string and assigns it to the ExclusiveCampaignsStrategy field.
func (o *Application) SetExclusiveCampaignsStrategy(v string) {
	o.ExclusiveCampaignsStrategy = &v
}

// GetDefaultDiscountScope returns the DefaultDiscountScope field value if set, zero value otherwise.
func (o *Application) GetDefaultDiscountScope() string {
	if o == nil || o.DefaultDiscountScope == nil {
		var ret string
		return ret
	}
	return *o.DefaultDiscountScope
}

// GetDefaultDiscountScopeOk returns a tuple with the DefaultDiscountScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetDefaultDiscountScopeOk() (*string, bool) {
	if o == nil || o.DefaultDiscountScope == nil {
		return nil, false
	}
	return o.DefaultDiscountScope, true
}

// HasDefaultDiscountScope returns a boolean if a field has been set.
func (o *Application) HasDefaultDiscountScope() bool {
	if o != nil && o.DefaultDiscountScope != nil {
		return true
	}

	return false
}

// SetDefaultDiscountScope gets a reference to the given string and assigns it to the DefaultDiscountScope field.
func (o *Application) SetDefaultDiscountScope(v string) {
	o.DefaultDiscountScope = &v
}

// GetEnableCascadingDiscounts returns the EnableCascadingDiscounts field value if set, zero value otherwise.
func (o *Application) GetEnableCascadingDiscounts() bool {
	if o == nil || o.EnableCascadingDiscounts == nil {
		var ret bool
		return ret
	}
	return *o.EnableCascadingDiscounts
}

// GetEnableCascadingDiscountsOk returns a tuple with the EnableCascadingDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetEnableCascadingDiscountsOk() (*bool, bool) {
	if o == nil || o.EnableCascadingDiscounts == nil {
		return nil, false
	}
	return o.EnableCascadingDiscounts, true
}

// HasEnableCascadingDiscounts returns a boolean if a field has been set.
func (o *Application) HasEnableCascadingDiscounts() bool {
	if o != nil && o.EnableCascadingDiscounts != nil {
		return true
	}

	return false
}

// SetEnableCascadingDiscounts gets a reference to the given bool and assigns it to the EnableCascadingDiscounts field.
func (o *Application) SetEnableCascadingDiscounts(v bool) {
	o.EnableCascadingDiscounts = &v
}

// GetEnableFlattenedCartItems returns the EnableFlattenedCartItems field value if set, zero value otherwise.
func (o *Application) GetEnableFlattenedCartItems() bool {
	if o == nil || o.EnableFlattenedCartItems == nil {
		var ret bool
		return ret
	}
	return *o.EnableFlattenedCartItems
}

// GetEnableFlattenedCartItemsOk returns a tuple with the EnableFlattenedCartItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetEnableFlattenedCartItemsOk() (*bool, bool) {
	if o == nil || o.EnableFlattenedCartItems == nil {
		return nil, false
	}
	return o.EnableFlattenedCartItems, true
}

// HasEnableFlattenedCartItems returns a boolean if a field has been set.
func (o *Application) HasEnableFlattenedCartItems() bool {
	if o != nil && o.EnableFlattenedCartItems != nil {
		return true
	}

	return false
}

// SetEnableFlattenedCartItems gets a reference to the given bool and assigns it to the EnableFlattenedCartItems field.
func (o *Application) SetEnableFlattenedCartItems(v bool) {
	o.EnableFlattenedCartItems = &v
}

// GetAttributesSettings returns the AttributesSettings field value if set, zero value otherwise.
func (o *Application) GetAttributesSettings() AttributesSettings {
	if o == nil || o.AttributesSettings == nil {
		var ret AttributesSettings
		return ret
	}
	return *o.AttributesSettings
}

// GetAttributesSettingsOk returns a tuple with the AttributesSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetAttributesSettingsOk() (*AttributesSettings, bool) {
	if o == nil || o.AttributesSettings == nil {
		return nil, false
	}
	return o.AttributesSettings, true
}

// HasAttributesSettings returns a boolean if a field has been set.
func (o *Application) HasAttributesSettings() bool {
	if o != nil && o.AttributesSettings != nil {
		return true
	}

	return false
}

// SetAttributesSettings gets a reference to the given AttributesSettings and assigns it to the AttributesSettings field.
func (o *Application) SetAttributesSettings(v AttributesSettings) {
	o.AttributesSettings = &v
}

// GetSandbox returns the Sandbox field value if set, zero value otherwise.
func (o *Application) GetSandbox() bool {
	if o == nil || o.Sandbox == nil {
		var ret bool
		return ret
	}
	return *o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetSandboxOk() (*bool, bool) {
	if o == nil || o.Sandbox == nil {
		return nil, false
	}
	return o.Sandbox, true
}

// HasSandbox returns a boolean if a field has been set.
func (o *Application) HasSandbox() bool {
	if o != nil && o.Sandbox != nil {
		return true
	}

	return false
}

// SetSandbox gets a reference to the given bool and assigns it to the Sandbox field.
func (o *Application) SetSandbox(v bool) {
	o.Sandbox = &v
}

// GetEnablePartialDiscounts returns the EnablePartialDiscounts field value if set, zero value otherwise.
func (o *Application) GetEnablePartialDiscounts() bool {
	if o == nil || o.EnablePartialDiscounts == nil {
		var ret bool
		return ret
	}
	return *o.EnablePartialDiscounts
}

// GetEnablePartialDiscountsOk returns a tuple with the EnablePartialDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetEnablePartialDiscountsOk() (*bool, bool) {
	if o == nil || o.EnablePartialDiscounts == nil {
		return nil, false
	}
	return o.EnablePartialDiscounts, true
}

// HasEnablePartialDiscounts returns a boolean if a field has been set.
func (o *Application) HasEnablePartialDiscounts() bool {
	if o != nil && o.EnablePartialDiscounts != nil {
		return true
	}

	return false
}

// SetEnablePartialDiscounts gets a reference to the given bool and assigns it to the EnablePartialDiscounts field.
func (o *Application) SetEnablePartialDiscounts(v bool) {
	o.EnablePartialDiscounts = &v
}

// GetDefaultDiscountAdditionalCostPerItemScope returns the DefaultDiscountAdditionalCostPerItemScope field value if set, zero value otherwise.
func (o *Application) GetDefaultDiscountAdditionalCostPerItemScope() string {
	if o == nil || o.DefaultDiscountAdditionalCostPerItemScope == nil {
		var ret string
		return ret
	}
	return *o.DefaultDiscountAdditionalCostPerItemScope
}

// GetDefaultDiscountAdditionalCostPerItemScopeOk returns a tuple with the DefaultDiscountAdditionalCostPerItemScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetDefaultDiscountAdditionalCostPerItemScopeOk() (*string, bool) {
	if o == nil || o.DefaultDiscountAdditionalCostPerItemScope == nil {
		return nil, false
	}
	return o.DefaultDiscountAdditionalCostPerItemScope, true
}

// HasDefaultDiscountAdditionalCostPerItemScope returns a boolean if a field has been set.
func (o *Application) HasDefaultDiscountAdditionalCostPerItemScope() bool {
	if o != nil && o.DefaultDiscountAdditionalCostPerItemScope != nil {
		return true
	}

	return false
}

// SetDefaultDiscountAdditionalCostPerItemScope gets a reference to the given string and assigns it to the DefaultDiscountAdditionalCostPerItemScope field.
func (o *Application) SetDefaultDiscountAdditionalCostPerItemScope(v string) {
	o.DefaultDiscountAdditionalCostPerItemScope = &v
}

// GetLoyaltyPrograms returns the LoyaltyPrograms field value
func (o *Application) GetLoyaltyPrograms() []LoyaltyProgram {
	if o == nil {
		var ret []LoyaltyProgram
		return ret
	}

	return o.LoyaltyPrograms
}

// GetLoyaltyProgramsOk returns a tuple with the LoyaltyPrograms field value
// and a boolean to check if the value has been set.
func (o *Application) GetLoyaltyProgramsOk() ([]LoyaltyProgram, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoyaltyPrograms, true
}

// SetLoyaltyPrograms sets field value
func (o *Application) SetLoyaltyPrograms(v []LoyaltyProgram) {
	o.LoyaltyPrograms = v
}

func (o Application) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["timezone"] = o.Timezone
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if o.CaseSensitivity != nil {
		toSerialize["caseSensitivity"] = o.CaseSensitivity
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Limits != nil {
		toSerialize["limits"] = o.Limits
	}
	if o.CampaignPriority != nil {
		toSerialize["campaignPriority"] = o.CampaignPriority
	}
	if o.ExclusiveCampaignsStrategy != nil {
		toSerialize["exclusiveCampaignsStrategy"] = o.ExclusiveCampaignsStrategy
	}
	if o.DefaultDiscountScope != nil {
		toSerialize["defaultDiscountScope"] = o.DefaultDiscountScope
	}
	if o.EnableCascadingDiscounts != nil {
		toSerialize["enableCascadingDiscounts"] = o.EnableCascadingDiscounts
	}
	if o.EnableFlattenedCartItems != nil {
		toSerialize["enableFlattenedCartItems"] = o.EnableFlattenedCartItems
	}
	if o.AttributesSettings != nil {
		toSerialize["attributesSettings"] = o.AttributesSettings
	}
	if o.Sandbox != nil {
		toSerialize["sandbox"] = o.Sandbox
	}
	if o.EnablePartialDiscounts != nil {
		toSerialize["enablePartialDiscounts"] = o.EnablePartialDiscounts
	}
	if o.DefaultDiscountAdditionalCostPerItemScope != nil {
		toSerialize["defaultDiscountAdditionalCostPerItemScope"] = o.DefaultDiscountAdditionalCostPerItemScope
	}
	if true {
		toSerialize["loyaltyPrograms"] = o.LoyaltyPrograms
	}
	return json.Marshal(toSerialize)
}

type NullableApplication struct {
	value *Application
	isSet bool
}

func (v NullableApplication) Get() *Application {
	return v.value
}

func (v *NullableApplication) Set(val *Application) {
	v.value = val
	v.isSet = true
}

func (v NullableApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplication(val *Application) *NullableApplication {
	return &NullableApplication{value: val, isSet: true}
}

func (v NullableApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


