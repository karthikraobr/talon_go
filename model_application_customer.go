/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// ApplicationCustomer 
type ApplicationCustomer struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints. Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created. The exact moment this entity was created. The exact moment this entity was created. The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The integration ID set by your integration layer. The integration ID set by your integration layer.
	IntegrationId string `json:"integrationId"`
	// Arbitrary properties associated with this item.
	Attributes map[string]interface{} `json:"attributes"`
	// The ID of the Talon.One account that owns this profile. The ID of the Talon.One account that owns this profile.
	AccountId int32 `json:"accountId"`
	// The total amount of closed sessions by a customer. A closed session is a successful purchase.
	ClosedSessions int32 `json:"closedSessions"`
	// Sum of all purchases made by this customer.
	TotalSales float32 `json:"totalSales"`
	// **DEPRECATED** A list of loyalty programs joined by the customer. 
	LoyaltyMemberships []LoyaltyMembership `json:"loyaltyMemberships,omitempty"`
	// A list of audiences the customer belongs to.
	AudienceMemberships []AudienceMembership `json:"audienceMemberships,omitempty"`
	// Timestamp of the most recent event received from this customer. This field is updated on calls that trigger the rule-engine and that are not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).  For example, [reserving a coupon](https://docs.talon.one/integration-api/#operation/createCouponReservation) for a customer doesn't impact this field. 
	LastActivity time.Time `json:"lastActivity"`
	// The Integration ID of the Customer Profile that referred this Customer in the Application.
	AdvocateIntegrationId *string `json:"advocateIntegrationId,omitempty"`
}

// NewApplicationCustomer instantiates a new ApplicationCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationCustomer(id int32, created time.Time, integrationId string, attributes map[string]interface{}, accountId int32, closedSessions int32, totalSales float32, lastActivity time.Time) *ApplicationCustomer {
	this := ApplicationCustomer{}
	this.Id = id
	this.Created = created
	this.IntegrationId = integrationId
	this.Attributes = attributes
	this.AccountId = accountId
	this.ClosedSessions = closedSessions
	this.TotalSales = totalSales
	this.LastActivity = lastActivity
	return &this
}

// NewApplicationCustomerWithDefaults instantiates a new ApplicationCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationCustomerWithDefaults() *ApplicationCustomer {
	this := ApplicationCustomer{}
	return &this
}

// GetId returns the Id field value
func (o *ApplicationCustomer) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApplicationCustomer) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *ApplicationCustomer) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ApplicationCustomer) SetCreated(v time.Time) {
	o.Created = v
}

// GetIntegrationId returns the IntegrationId field value
func (o *ApplicationCustomer) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *ApplicationCustomer) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetAttributes returns the Attributes field value
func (o *ApplicationCustomer) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *ApplicationCustomer) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetAccountId returns the AccountId field value
func (o *ApplicationCustomer) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ApplicationCustomer) SetAccountId(v int32) {
	o.AccountId = v
}

// GetClosedSessions returns the ClosedSessions field value
func (o *ApplicationCustomer) GetClosedSessions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClosedSessions
}

// GetClosedSessionsOk returns a tuple with the ClosedSessions field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetClosedSessionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClosedSessions, true
}

// SetClosedSessions sets field value
func (o *ApplicationCustomer) SetClosedSessions(v int32) {
	o.ClosedSessions = v
}

// GetTotalSales returns the TotalSales field value
func (o *ApplicationCustomer) GetTotalSales() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalSales
}

// GetTotalSalesOk returns a tuple with the TotalSales field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetTotalSalesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalSales, true
}

// SetTotalSales sets field value
func (o *ApplicationCustomer) SetTotalSales(v float32) {
	o.TotalSales = v
}

// GetLoyaltyMemberships returns the LoyaltyMemberships field value if set, zero value otherwise.
func (o *ApplicationCustomer) GetLoyaltyMemberships() []LoyaltyMembership {
	if o == nil || o.LoyaltyMemberships == nil {
		var ret []LoyaltyMembership
		return ret
	}
	return o.LoyaltyMemberships
}

// GetLoyaltyMembershipsOk returns a tuple with the LoyaltyMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetLoyaltyMembershipsOk() ([]LoyaltyMembership, bool) {
	if o == nil || o.LoyaltyMemberships == nil {
		return nil, false
	}
	return o.LoyaltyMemberships, true
}

// HasLoyaltyMemberships returns a boolean if a field has been set.
func (o *ApplicationCustomer) HasLoyaltyMemberships() bool {
	if o != nil && o.LoyaltyMemberships != nil {
		return true
	}

	return false
}

// SetLoyaltyMemberships gets a reference to the given []LoyaltyMembership and assigns it to the LoyaltyMemberships field.
func (o *ApplicationCustomer) SetLoyaltyMemberships(v []LoyaltyMembership) {
	o.LoyaltyMemberships = v
}

// GetAudienceMemberships returns the AudienceMemberships field value if set, zero value otherwise.
func (o *ApplicationCustomer) GetAudienceMemberships() []AudienceMembership {
	if o == nil || o.AudienceMemberships == nil {
		var ret []AudienceMembership
		return ret
	}
	return o.AudienceMemberships
}

// GetAudienceMembershipsOk returns a tuple with the AudienceMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetAudienceMembershipsOk() ([]AudienceMembership, bool) {
	if o == nil || o.AudienceMemberships == nil {
		return nil, false
	}
	return o.AudienceMemberships, true
}

// HasAudienceMemberships returns a boolean if a field has been set.
func (o *ApplicationCustomer) HasAudienceMemberships() bool {
	if o != nil && o.AudienceMemberships != nil {
		return true
	}

	return false
}

// SetAudienceMemberships gets a reference to the given []AudienceMembership and assigns it to the AudienceMemberships field.
func (o *ApplicationCustomer) SetAudienceMemberships(v []AudienceMembership) {
	o.AudienceMemberships = v
}

// GetLastActivity returns the LastActivity field value
func (o *ApplicationCustomer) GetLastActivity() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastActivity
}

// GetLastActivityOk returns a tuple with the LastActivity field value
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetLastActivityOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastActivity, true
}

// SetLastActivity sets field value
func (o *ApplicationCustomer) SetLastActivity(v time.Time) {
	o.LastActivity = v
}

// GetAdvocateIntegrationId returns the AdvocateIntegrationId field value if set, zero value otherwise.
func (o *ApplicationCustomer) GetAdvocateIntegrationId() string {
	if o == nil || o.AdvocateIntegrationId == nil {
		var ret string
		return ret
	}
	return *o.AdvocateIntegrationId
}

// GetAdvocateIntegrationIdOk returns a tuple with the AdvocateIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCustomer) GetAdvocateIntegrationIdOk() (*string, bool) {
	if o == nil || o.AdvocateIntegrationId == nil {
		return nil, false
	}
	return o.AdvocateIntegrationId, true
}

// HasAdvocateIntegrationId returns a boolean if a field has been set.
func (o *ApplicationCustomer) HasAdvocateIntegrationId() bool {
	if o != nil && o.AdvocateIntegrationId != nil {
		return true
	}

	return false
}

// SetAdvocateIntegrationId gets a reference to the given string and assigns it to the AdvocateIntegrationId field.
func (o *ApplicationCustomer) SetAdvocateIntegrationId(v string) {
	o.AdvocateIntegrationId = &v
}

func (o ApplicationCustomer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["integrationId"] = o.IntegrationId
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["closedSessions"] = o.ClosedSessions
	}
	if true {
		toSerialize["totalSales"] = o.TotalSales
	}
	if o.LoyaltyMemberships != nil {
		toSerialize["loyaltyMemberships"] = o.LoyaltyMemberships
	}
	if o.AudienceMemberships != nil {
		toSerialize["audienceMemberships"] = o.AudienceMemberships
	}
	if true {
		toSerialize["lastActivity"] = o.LastActivity
	}
	if o.AdvocateIntegrationId != nil {
		toSerialize["advocateIntegrationId"] = o.AdvocateIntegrationId
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationCustomer struct {
	value *ApplicationCustomer
	isSet bool
}

func (v NullableApplicationCustomer) Get() *ApplicationCustomer {
	return v.value
}

func (v *NullableApplicationCustomer) Set(val *ApplicationCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationCustomer(val *ApplicationCustomer) *NullableApplicationCustomer {
	return &NullableApplicationCustomer{value: val, isSet: true}
}

func (v NullableApplicationCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


