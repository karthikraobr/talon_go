/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// Account 
type Account struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The exact moment this entity was last modified.
	Modified time.Time `json:"modified"`
	CompanyName string `json:"companyName"`
	// Subdomain Name for yourcompany.talon.one.
	DomainName string `json:"domainName"`
	// State of the account (active, deactivated).
	State string `json:"state"`
	// The billing email address associated with your company account.
	BillingEmail string `json:"billingEmail"`
	// The name of your booked plan.
	PlanName *string `json:"planName,omitempty"`
	// The point in time at which your current plan expires.
	PlanExpires *time.Time `json:"planExpires,omitempty"`
	// The maximum number of Applications covered by your plan.
	ApplicationLimit *int32 `json:"applicationLimit,omitempty"`
	// The maximum number of Campaign Manager Users covered by your plan.
	UserLimit *int32 `json:"userLimit,omitempty"`
	// The maximum number of Campaigns covered by your plan.
	CampaignLimit *int32 `json:"campaignLimit,omitempty"`
	// The maximum number of Integration API calls covered by your plan per billing period.
	ApiLimit *int32 `json:"apiLimit,omitempty"`
	// The current number of Applications in your account.
	ApplicationCount int32 `json:"applicationCount"`
	// The current number of Campaign Manager Users in your account.
	UserCount int32 `json:"userCount"`
	// The current number of active Campaigns in your account.
	CampaignsActiveCount int32 `json:"campaignsActiveCount"`
	// The current number of inactive Campaigns in your account.
	CampaignsInactiveCount int32 `json:"campaignsInactiveCount"`
	// Arbitrary properties associated with this campaign.
	Attributes map[string]interface{} `json:"attributes,omitempty"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount(id int32, created time.Time, modified time.Time, companyName string, domainName string, state string, billingEmail string, applicationCount int32, userCount int32, campaignsActiveCount int32, campaignsInactiveCount int32) *Account {
	this := Account{}
	this.Id = id
	this.Created = created
	this.Modified = modified
	this.CompanyName = companyName
	this.DomainName = domainName
	this.State = state
	this.BillingEmail = billingEmail
	this.ApplicationCount = applicationCount
	this.UserCount = userCount
	this.CampaignsActiveCount = campaignsActiveCount
	this.CampaignsInactiveCount = campaignsInactiveCount
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetId returns the Id field value
func (o *Account) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Account) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Account) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *Account) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Account) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Account) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *Account) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *Account) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *Account) SetModified(v time.Time) {
	o.Modified = v
}

// GetCompanyName returns the CompanyName field value
func (o *Account) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *Account) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *Account) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetDomainName returns the DomainName field value
func (o *Account) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *Account) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *Account) SetDomainName(v string) {
	o.DomainName = v
}

// GetState returns the State field value
func (o *Account) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Account) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Account) SetState(v string) {
	o.State = v
}

// GetBillingEmail returns the BillingEmail field value
func (o *Account) GetBillingEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingEmail
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value
// and a boolean to check if the value has been set.
func (o *Account) GetBillingEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingEmail, true
}

// SetBillingEmail sets field value
func (o *Account) SetBillingEmail(v string) {
	o.BillingEmail = v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *Account) GetPlanName() string {
	if o == nil || o.PlanName == nil {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetPlanNameOk() (*string, bool) {
	if o == nil || o.PlanName == nil {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *Account) HasPlanName() bool {
	if o != nil && o.PlanName != nil {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *Account) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanExpires returns the PlanExpires field value if set, zero value otherwise.
func (o *Account) GetPlanExpires() time.Time {
	if o == nil || o.PlanExpires == nil {
		var ret time.Time
		return ret
	}
	return *o.PlanExpires
}

// GetPlanExpiresOk returns a tuple with the PlanExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetPlanExpiresOk() (*time.Time, bool) {
	if o == nil || o.PlanExpires == nil {
		return nil, false
	}
	return o.PlanExpires, true
}

// HasPlanExpires returns a boolean if a field has been set.
func (o *Account) HasPlanExpires() bool {
	if o != nil && o.PlanExpires != nil {
		return true
	}

	return false
}

// SetPlanExpires gets a reference to the given time.Time and assigns it to the PlanExpires field.
func (o *Account) SetPlanExpires(v time.Time) {
	o.PlanExpires = &v
}

// GetApplicationLimit returns the ApplicationLimit field value if set, zero value otherwise.
func (o *Account) GetApplicationLimit() int32 {
	if o == nil || o.ApplicationLimit == nil {
		var ret int32
		return ret
	}
	return *o.ApplicationLimit
}

// GetApplicationLimitOk returns a tuple with the ApplicationLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetApplicationLimitOk() (*int32, bool) {
	if o == nil || o.ApplicationLimit == nil {
		return nil, false
	}
	return o.ApplicationLimit, true
}

// HasApplicationLimit returns a boolean if a field has been set.
func (o *Account) HasApplicationLimit() bool {
	if o != nil && o.ApplicationLimit != nil {
		return true
	}

	return false
}

// SetApplicationLimit gets a reference to the given int32 and assigns it to the ApplicationLimit field.
func (o *Account) SetApplicationLimit(v int32) {
	o.ApplicationLimit = &v
}

// GetUserLimit returns the UserLimit field value if set, zero value otherwise.
func (o *Account) GetUserLimit() int32 {
	if o == nil || o.UserLimit == nil {
		var ret int32
		return ret
	}
	return *o.UserLimit
}

// GetUserLimitOk returns a tuple with the UserLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetUserLimitOk() (*int32, bool) {
	if o == nil || o.UserLimit == nil {
		return nil, false
	}
	return o.UserLimit, true
}

// HasUserLimit returns a boolean if a field has been set.
func (o *Account) HasUserLimit() bool {
	if o != nil && o.UserLimit != nil {
		return true
	}

	return false
}

// SetUserLimit gets a reference to the given int32 and assigns it to the UserLimit field.
func (o *Account) SetUserLimit(v int32) {
	o.UserLimit = &v
}

// GetCampaignLimit returns the CampaignLimit field value if set, zero value otherwise.
func (o *Account) GetCampaignLimit() int32 {
	if o == nil || o.CampaignLimit == nil {
		var ret int32
		return ret
	}
	return *o.CampaignLimit
}

// GetCampaignLimitOk returns a tuple with the CampaignLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCampaignLimitOk() (*int32, bool) {
	if o == nil || o.CampaignLimit == nil {
		return nil, false
	}
	return o.CampaignLimit, true
}

// HasCampaignLimit returns a boolean if a field has been set.
func (o *Account) HasCampaignLimit() bool {
	if o != nil && o.CampaignLimit != nil {
		return true
	}

	return false
}

// SetCampaignLimit gets a reference to the given int32 and assigns it to the CampaignLimit field.
func (o *Account) SetCampaignLimit(v int32) {
	o.CampaignLimit = &v
}

// GetApiLimit returns the ApiLimit field value if set, zero value otherwise.
func (o *Account) GetApiLimit() int32 {
	if o == nil || o.ApiLimit == nil {
		var ret int32
		return ret
	}
	return *o.ApiLimit
}

// GetApiLimitOk returns a tuple with the ApiLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetApiLimitOk() (*int32, bool) {
	if o == nil || o.ApiLimit == nil {
		return nil, false
	}
	return o.ApiLimit, true
}

// HasApiLimit returns a boolean if a field has been set.
func (o *Account) HasApiLimit() bool {
	if o != nil && o.ApiLimit != nil {
		return true
	}

	return false
}

// SetApiLimit gets a reference to the given int32 and assigns it to the ApiLimit field.
func (o *Account) SetApiLimit(v int32) {
	o.ApiLimit = &v
}

// GetApplicationCount returns the ApplicationCount field value
func (o *Account) GetApplicationCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationCount
}

// GetApplicationCountOk returns a tuple with the ApplicationCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetApplicationCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationCount, true
}

// SetApplicationCount sets field value
func (o *Account) SetApplicationCount(v int32) {
	o.ApplicationCount = v
}

// GetUserCount returns the UserCount field value
func (o *Account) GetUserCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserCount
}

// GetUserCountOk returns a tuple with the UserCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetUserCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserCount, true
}

// SetUserCount sets field value
func (o *Account) SetUserCount(v int32) {
	o.UserCount = v
}

// GetCampaignsActiveCount returns the CampaignsActiveCount field value
func (o *Account) GetCampaignsActiveCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignsActiveCount
}

// GetCampaignsActiveCountOk returns a tuple with the CampaignsActiveCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetCampaignsActiveCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignsActiveCount, true
}

// SetCampaignsActiveCount sets field value
func (o *Account) SetCampaignsActiveCount(v int32) {
	o.CampaignsActiveCount = v
}

// GetCampaignsInactiveCount returns the CampaignsInactiveCount field value
func (o *Account) GetCampaignsInactiveCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignsInactiveCount
}

// GetCampaignsInactiveCountOk returns a tuple with the CampaignsInactiveCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetCampaignsInactiveCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignsInactiveCount, true
}

// SetCampaignsInactiveCount sets field value
func (o *Account) SetCampaignsInactiveCount(v int32) {
	o.CampaignsInactiveCount = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Account) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Account) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *Account) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["companyName"] = o.CompanyName
	}
	if true {
		toSerialize["domainName"] = o.DomainName
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["billingEmail"] = o.BillingEmail
	}
	if o.PlanName != nil {
		toSerialize["planName"] = o.PlanName
	}
	if o.PlanExpires != nil {
		toSerialize["planExpires"] = o.PlanExpires
	}
	if o.ApplicationLimit != nil {
		toSerialize["applicationLimit"] = o.ApplicationLimit
	}
	if o.UserLimit != nil {
		toSerialize["userLimit"] = o.UserLimit
	}
	if o.CampaignLimit != nil {
		toSerialize["campaignLimit"] = o.CampaignLimit
	}
	if o.ApiLimit != nil {
		toSerialize["apiLimit"] = o.ApiLimit
	}
	if true {
		toSerialize["applicationCount"] = o.ApplicationCount
	}
	if true {
		toSerialize["userCount"] = o.UserCount
	}
	if true {
		toSerialize["campaignsActiveCount"] = o.CampaignsActiveCount
	}
	if true {
		toSerialize["campaignsInactiveCount"] = o.CampaignsInactiveCount
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


