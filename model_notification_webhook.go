/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// NotificationWebhook 
type NotificationWebhook struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The exact moment this entity was last modified.
	Modified time.Time `json:"modified"`
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// API url for this notification webhook.
	Url string `json:"url"`
	// List of API HTTP headers for this notification webhook.
	Headers []string `json:"headers"`
}

// NewNotificationWebhook instantiates a new NotificationWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationWebhook(id int32, created time.Time, modified time.Time, applicationId int32, url string, headers []string) *NotificationWebhook {
	this := NotificationWebhook{}
	this.Id = id
	this.Created = created
	this.Modified = modified
	this.ApplicationId = applicationId
	this.Url = url
	this.Headers = headers
	return &this
}

// NewNotificationWebhookWithDefaults instantiates a new NotificationWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationWebhookWithDefaults() *NotificationWebhook {
	this := NotificationWebhook{}
	return &this
}

// GetId returns the Id field value
func (o *NotificationWebhook) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhook) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NotificationWebhook) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *NotificationWebhook) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhook) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *NotificationWebhook) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *NotificationWebhook) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhook) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *NotificationWebhook) SetModified(v time.Time) {
	o.Modified = v
}

// GetApplicationId returns the ApplicationId field value
func (o *NotificationWebhook) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhook) GetApplicationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *NotificationWebhook) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetUrl returns the Url field value
func (o *NotificationWebhook) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhook) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *NotificationWebhook) SetUrl(v string) {
	o.Url = v
}

// GetHeaders returns the Headers field value
func (o *NotificationWebhook) GetHeaders() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhook) GetHeadersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Headers, true
}

// SetHeaders sets field value
func (o *NotificationWebhook) SetHeaders(v []string) {
	o.Headers = v
}

func (o NotificationWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["headers"] = o.Headers
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationWebhook struct {
	value *NotificationWebhook
	isSet bool
}

func (v NullableNotificationWebhook) Get() *NotificationWebhook {
	return v.value
}

func (v *NullableNotificationWebhook) Set(val *NotificationWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationWebhook(val *NotificationWebhook) *NullableNotificationWebhook {
	return &NullableNotificationWebhook{value: val, isSet: true}
}

func (v NullableNotificationWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


