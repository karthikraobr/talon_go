/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// AccountLimits struct for AccountLimits
type AccountLimits struct {
	// Total number of allowed live applications in the account.
	LiveApplications int32 `json:"liveApplications"`
	// Total number of allowed sandbox applications in the account.
	SandboxApplications int32 `json:"sandboxApplications"`
	// Total number of allowed active campaigns in live applications in the account.
	ActiveCampaigns int32 `json:"activeCampaigns"`
	// Total number of allowed coupons in the account.
	Coupons int32 `json:"coupons"`
	// Total number of allowed referral codes in the account.
	ReferralCodes int32 `json:"referralCodes"`
	// Total number of allowed active rulesets in the account.
	ActiveRules int32 `json:"activeRules"`
	// Total number of allowed live loyalty programs in the account.
	LiveLoyaltyPrograms int32 `json:"liveLoyaltyPrograms"`
	// Total number of allowed sandbox loyalty programs in the account.
	SandboxLoyaltyPrograms int32 `json:"sandboxLoyaltyPrograms"`
	// Total number of allowed webhooks in the account.
	Webhooks int32 `json:"webhooks"`
	// Total number of allowed users in the account.
	Users int32 `json:"users"`
	// Allowed volume of API requests to the account.
	ApiVolume int32 `json:"apiVolume"`
	// Array of promotion types that are employed in the account.
	PromotionTypes []string `json:"promotionTypes"`
}

// NewAccountLimits instantiates a new AccountLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountLimits(liveApplications int32, sandboxApplications int32, activeCampaigns int32, coupons int32, referralCodes int32, activeRules int32, liveLoyaltyPrograms int32, sandboxLoyaltyPrograms int32, webhooks int32, users int32, apiVolume int32, promotionTypes []string) *AccountLimits {
	this := AccountLimits{}
	this.LiveApplications = liveApplications
	this.SandboxApplications = sandboxApplications
	this.ActiveCampaigns = activeCampaigns
	this.Coupons = coupons
	this.ReferralCodes = referralCodes
	this.ActiveRules = activeRules
	this.LiveLoyaltyPrograms = liveLoyaltyPrograms
	this.SandboxLoyaltyPrograms = sandboxLoyaltyPrograms
	this.Webhooks = webhooks
	this.Users = users
	this.ApiVolume = apiVolume
	this.PromotionTypes = promotionTypes
	return &this
}

// NewAccountLimitsWithDefaults instantiates a new AccountLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountLimitsWithDefaults() *AccountLimits {
	this := AccountLimits{}
	return &this
}

// GetLiveApplications returns the LiveApplications field value
func (o *AccountLimits) GetLiveApplications() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LiveApplications
}

// GetLiveApplicationsOk returns a tuple with the LiveApplications field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetLiveApplicationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveApplications, true
}

// SetLiveApplications sets field value
func (o *AccountLimits) SetLiveApplications(v int32) {
	o.LiveApplications = v
}

// GetSandboxApplications returns the SandboxApplications field value
func (o *AccountLimits) GetSandboxApplications() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SandboxApplications
}

// GetSandboxApplicationsOk returns a tuple with the SandboxApplications field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetSandboxApplicationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SandboxApplications, true
}

// SetSandboxApplications sets field value
func (o *AccountLimits) SetSandboxApplications(v int32) {
	o.SandboxApplications = v
}

// GetActiveCampaigns returns the ActiveCampaigns field value
func (o *AccountLimits) GetActiveCampaigns() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ActiveCampaigns
}

// GetActiveCampaignsOk returns a tuple with the ActiveCampaigns field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetActiveCampaignsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveCampaigns, true
}

// SetActiveCampaigns sets field value
func (o *AccountLimits) SetActiveCampaigns(v int32) {
	o.ActiveCampaigns = v
}

// GetCoupons returns the Coupons field value
func (o *AccountLimits) GetCoupons() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetCouponsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Coupons, true
}

// SetCoupons sets field value
func (o *AccountLimits) SetCoupons(v int32) {
	o.Coupons = v
}

// GetReferralCodes returns the ReferralCodes field value
func (o *AccountLimits) GetReferralCodes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReferralCodes
}

// GetReferralCodesOk returns a tuple with the ReferralCodes field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetReferralCodesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferralCodes, true
}

// SetReferralCodes sets field value
func (o *AccountLimits) SetReferralCodes(v int32) {
	o.ReferralCodes = v
}

// GetActiveRules returns the ActiveRules field value
func (o *AccountLimits) GetActiveRules() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ActiveRules
}

// GetActiveRulesOk returns a tuple with the ActiveRules field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetActiveRulesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveRules, true
}

// SetActiveRules sets field value
func (o *AccountLimits) SetActiveRules(v int32) {
	o.ActiveRules = v
}

// GetLiveLoyaltyPrograms returns the LiveLoyaltyPrograms field value
func (o *AccountLimits) GetLiveLoyaltyPrograms() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LiveLoyaltyPrograms
}

// GetLiveLoyaltyProgramsOk returns a tuple with the LiveLoyaltyPrograms field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetLiveLoyaltyProgramsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveLoyaltyPrograms, true
}

// SetLiveLoyaltyPrograms sets field value
func (o *AccountLimits) SetLiveLoyaltyPrograms(v int32) {
	o.LiveLoyaltyPrograms = v
}

// GetSandboxLoyaltyPrograms returns the SandboxLoyaltyPrograms field value
func (o *AccountLimits) GetSandboxLoyaltyPrograms() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SandboxLoyaltyPrograms
}

// GetSandboxLoyaltyProgramsOk returns a tuple with the SandboxLoyaltyPrograms field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetSandboxLoyaltyProgramsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SandboxLoyaltyPrograms, true
}

// SetSandboxLoyaltyPrograms sets field value
func (o *AccountLimits) SetSandboxLoyaltyPrograms(v int32) {
	o.SandboxLoyaltyPrograms = v
}

// GetWebhooks returns the Webhooks field value
func (o *AccountLimits) GetWebhooks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetWebhooksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Webhooks, true
}

// SetWebhooks sets field value
func (o *AccountLimits) SetWebhooks(v int32) {
	o.Webhooks = v
}

// GetUsers returns the Users field value
func (o *AccountLimits) GetUsers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetUsersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Users, true
}

// SetUsers sets field value
func (o *AccountLimits) SetUsers(v int32) {
	o.Users = v
}

// GetApiVolume returns the ApiVolume field value
func (o *AccountLimits) GetApiVolume() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApiVolume
}

// GetApiVolumeOk returns a tuple with the ApiVolume field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetApiVolumeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVolume, true
}

// SetApiVolume sets field value
func (o *AccountLimits) SetApiVolume(v int32) {
	o.ApiVolume = v
}

// GetPromotionTypes returns the PromotionTypes field value
func (o *AccountLimits) GetPromotionTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PromotionTypes
}

// GetPromotionTypesOk returns a tuple with the PromotionTypes field value
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetPromotionTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PromotionTypes, true
}

// SetPromotionTypes sets field value
func (o *AccountLimits) SetPromotionTypes(v []string) {
	o.PromotionTypes = v
}

func (o AccountLimits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["liveApplications"] = o.LiveApplications
	}
	if true {
		toSerialize["sandboxApplications"] = o.SandboxApplications
	}
	if true {
		toSerialize["activeCampaigns"] = o.ActiveCampaigns
	}
	if true {
		toSerialize["coupons"] = o.Coupons
	}
	if true {
		toSerialize["referralCodes"] = o.ReferralCodes
	}
	if true {
		toSerialize["activeRules"] = o.ActiveRules
	}
	if true {
		toSerialize["liveLoyaltyPrograms"] = o.LiveLoyaltyPrograms
	}
	if true {
		toSerialize["sandboxLoyaltyPrograms"] = o.SandboxLoyaltyPrograms
	}
	if true {
		toSerialize["webhooks"] = o.Webhooks
	}
	if true {
		toSerialize["users"] = o.Users
	}
	if true {
		toSerialize["apiVolume"] = o.ApiVolume
	}
	if true {
		toSerialize["promotionTypes"] = o.PromotionTypes
	}
	return json.Marshal(toSerialize)
}

type NullableAccountLimits struct {
	value *AccountLimits
	isSet bool
}

func (v NullableAccountLimits) Get() *AccountLimits {
	return v.value
}

func (v *NullableAccountLimits) Set(val *AccountLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountLimits(val *AccountLimits) *NullableAccountLimits {
	return &NullableAccountLimits{value: val, isSet: true}
}

func (v NullableAccountLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


