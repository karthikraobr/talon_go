/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// SetDiscountPerAdditionalCostPerItemEffectProps The properties specific to the \"setDiscountPerAdditionalCostPerItem\" effect. This gets triggered whenever a validated rule contained a \"set discount per additional cost per item\" effect. This is a discount that should be applied on a specific additional cost in a specific item.
type SetDiscountPerAdditionalCostPerItemEffectProps struct {
	// The name/description of this discount.
	Name string `json:"name"`
	// The ID of the additional cost.
	AdditionalCostId int32 `json:"additionalCostId"`
	// The total monetary value of the discount.
	Value float32 `json:"value"`
	// The index of the item in the cart item list containing the additional cost to be discounted.
	Position float32 `json:"position"`
	// Only used when [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items) is enabled. Indicates which item the discount applies to for cart items with `quantity` > 1. 
	SubPosition *float32 `json:"subPosition,omitempty"`
	// The name of the additional cost.
	AdditionalCost string `json:"additionalCost"`
	// Only with [partial discounts enabled](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#partial-discounts). Represents the monetary value of the discount to be applied to additional discount without considering budget limitations. 
	DesiredValue *float32 `json:"desiredValue,omitempty"`
}

// NewSetDiscountPerAdditionalCostPerItemEffectProps instantiates a new SetDiscountPerAdditionalCostPerItemEffectProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDiscountPerAdditionalCostPerItemEffectProps(name string, additionalCostId int32, value float32, position float32, additionalCost string) *SetDiscountPerAdditionalCostPerItemEffectProps {
	this := SetDiscountPerAdditionalCostPerItemEffectProps{}
	this.Name = name
	this.AdditionalCostId = additionalCostId
	this.Value = value
	this.Position = position
	this.AdditionalCost = additionalCost
	return &this
}

// NewSetDiscountPerAdditionalCostPerItemEffectPropsWithDefaults instantiates a new SetDiscountPerAdditionalCostPerItemEffectProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDiscountPerAdditionalCostPerItemEffectPropsWithDefaults() *SetDiscountPerAdditionalCostPerItemEffectProps {
	this := SetDiscountPerAdditionalCostPerItemEffectProps{}
	return &this
}

// GetName returns the Name field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetName(v string) {
	o.Name = v
}

// GetAdditionalCostId returns the AdditionalCostId field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetAdditionalCostId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdditionalCostId
}

// GetAdditionalCostIdOk returns a tuple with the AdditionalCostId field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetAdditionalCostIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalCostId, true
}

// SetAdditionalCostId sets field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetAdditionalCostId(v int32) {
	o.AdditionalCostId = v
}

// GetValue returns the Value field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetValue(v float32) {
	o.Value = v
}

// GetPosition returns the Position field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetPosition() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetPositionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetPosition(v float32) {
	o.Position = v
}

// GetSubPosition returns the SubPosition field value if set, zero value otherwise.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetSubPosition() float32 {
	if o == nil || o.SubPosition == nil {
		var ret float32
		return ret
	}
	return *o.SubPosition
}

// GetSubPositionOk returns a tuple with the SubPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetSubPositionOk() (*float32, bool) {
	if o == nil || o.SubPosition == nil {
		return nil, false
	}
	return o.SubPosition, true
}

// HasSubPosition returns a boolean if a field has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) HasSubPosition() bool {
	if o != nil && o.SubPosition != nil {
		return true
	}

	return false
}

// SetSubPosition gets a reference to the given float32 and assigns it to the SubPosition field.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetSubPosition(v float32) {
	o.SubPosition = &v
}

// GetAdditionalCost returns the AdditionalCost field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetAdditionalCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdditionalCost
}

// GetAdditionalCostOk returns a tuple with the AdditionalCost field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetAdditionalCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalCost, true
}

// SetAdditionalCost sets field value
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetAdditionalCost(v string) {
	o.AdditionalCost = v
}

// GetDesiredValue returns the DesiredValue field value if set, zero value otherwise.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetDesiredValue() float32 {
	if o == nil || o.DesiredValue == nil {
		var ret float32
		return ret
	}
	return *o.DesiredValue
}

// GetDesiredValueOk returns a tuple with the DesiredValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) GetDesiredValueOk() (*float32, bool) {
	if o == nil || o.DesiredValue == nil {
		return nil, false
	}
	return o.DesiredValue, true
}

// HasDesiredValue returns a boolean if a field has been set.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) HasDesiredValue() bool {
	if o != nil && o.DesiredValue != nil {
		return true
	}

	return false
}

// SetDesiredValue gets a reference to the given float32 and assigns it to the DesiredValue field.
func (o *SetDiscountPerAdditionalCostPerItemEffectProps) SetDesiredValue(v float32) {
	o.DesiredValue = &v
}

func (o SetDiscountPerAdditionalCostPerItemEffectProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["additionalCostId"] = o.AdditionalCostId
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["position"] = o.Position
	}
	if o.SubPosition != nil {
		toSerialize["subPosition"] = o.SubPosition
	}
	if true {
		toSerialize["additionalCost"] = o.AdditionalCost
	}
	if o.DesiredValue != nil {
		toSerialize["desiredValue"] = o.DesiredValue
	}
	return json.Marshal(toSerialize)
}

type NullableSetDiscountPerAdditionalCostPerItemEffectProps struct {
	value *SetDiscountPerAdditionalCostPerItemEffectProps
	isSet bool
}

func (v NullableSetDiscountPerAdditionalCostPerItemEffectProps) Get() *SetDiscountPerAdditionalCostPerItemEffectProps {
	return v.value
}

func (v *NullableSetDiscountPerAdditionalCostPerItemEffectProps) Set(val *SetDiscountPerAdditionalCostPerItemEffectProps) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDiscountPerAdditionalCostPerItemEffectProps) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDiscountPerAdditionalCostPerItemEffectProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDiscountPerAdditionalCostPerItemEffectProps(val *SetDiscountPerAdditionalCostPerItemEffectProps) *NullableSetDiscountPerAdditionalCostPerItemEffectProps {
	return &NullableSetDiscountPerAdditionalCostPerItemEffectProps{value: val, isSet: true}
}

func (v NullableSetDiscountPerAdditionalCostPerItemEffectProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDiscountPerAdditionalCostPerItemEffectProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


