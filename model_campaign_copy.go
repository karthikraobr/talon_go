/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// CampaignCopy struct for CampaignCopy
type CampaignCopy struct {
	// Name of the copied campaign (Defaults to \"Copy of original campaign name\").
	Name *string `json:"name,omitempty"`
	// Application IDs of the applications to which a campaign should be copied to.
	ApplicationIds []int32 `json:"applicationIds"`
	// A detailed description of the campaign.
	Description *string `json:"description,omitempty"`
	// Timestamp when the campaign will become active.
	StartTime *time.Time `json:"startTime,omitempty"`
	// Timestamp when the campaign will become inactive.
	EndTime *time.Time `json:"endTime,omitempty"`
	// A list of tags for the campaign.
	Tags []string `json:"tags,omitempty"`
}

// NewCampaignCopy instantiates a new CampaignCopy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignCopy(applicationIds []int32) *CampaignCopy {
	this := CampaignCopy{}
	this.ApplicationIds = applicationIds
	return &this
}

// NewCampaignCopyWithDefaults instantiates a new CampaignCopy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignCopyWithDefaults() *CampaignCopy {
	this := CampaignCopy{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CampaignCopy) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignCopy) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CampaignCopy) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CampaignCopy) SetName(v string) {
	o.Name = &v
}

// GetApplicationIds returns the ApplicationIds field value
func (o *CampaignCopy) GetApplicationIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ApplicationIds
}

// GetApplicationIdsOk returns a tuple with the ApplicationIds field value
// and a boolean to check if the value has been set.
func (o *CampaignCopy) GetApplicationIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationIds, true
}

// SetApplicationIds sets field value
func (o *CampaignCopy) SetApplicationIds(v []int32) {
	o.ApplicationIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CampaignCopy) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignCopy) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CampaignCopy) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CampaignCopy) SetDescription(v string) {
	o.Description = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *CampaignCopy) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignCopy) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *CampaignCopy) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *CampaignCopy) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *CampaignCopy) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignCopy) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *CampaignCopy) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *CampaignCopy) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CampaignCopy) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignCopy) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CampaignCopy) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CampaignCopy) SetTags(v []string) {
	o.Tags = v
}

func (o CampaignCopy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["applicationIds"] = o.ApplicationIds
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignCopy struct {
	value *CampaignCopy
	isSet bool
}

func (v NullableCampaignCopy) Get() *CampaignCopy {
	return v.value
}

func (v *NullableCampaignCopy) Set(val *CampaignCopy) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignCopy) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignCopy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignCopy(val *CampaignCopy) *NullableCampaignCopy {
	return &NullableCampaignCopy{value: val, isSet: true}
}

func (v NullableCampaignCopy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignCopy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


