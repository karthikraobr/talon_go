/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// CreateApplicationAPIKey struct for CreateApplicationAPIKey
type CreateApplicationAPIKey struct {
	// Title for API Key.
	Title string `json:"title"`
	// The date the API key expired.
	Expires time.Time `json:"expires"`
	// The third-party platform the API key is valid for. Use `none` for a generic API key to be used from your own integration layer. 
	Platform *string `json:"platform,omitempty"`
}

// NewCreateApplicationAPIKey instantiates a new CreateApplicationAPIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationAPIKey(title string, expires time.Time) *CreateApplicationAPIKey {
	this := CreateApplicationAPIKey{}
	this.Title = title
	this.Expires = expires
	return &this
}

// NewCreateApplicationAPIKeyWithDefaults instantiates a new CreateApplicationAPIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationAPIKeyWithDefaults() *CreateApplicationAPIKey {
	this := CreateApplicationAPIKey{}
	return &this
}

// GetTitle returns the Title field value
func (o *CreateApplicationAPIKey) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationAPIKey) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateApplicationAPIKey) SetTitle(v string) {
	o.Title = v
}

// GetExpires returns the Expires field value
func (o *CreateApplicationAPIKey) GetExpires() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationAPIKey) GetExpiresOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *CreateApplicationAPIKey) SetExpires(v time.Time) {
	o.Expires = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *CreateApplicationAPIKey) GetPlatform() string {
	if o == nil || o.Platform == nil {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationAPIKey) GetPlatformOk() (*string, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *CreateApplicationAPIKey) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *CreateApplicationAPIKey) SetPlatform(v string) {
	o.Platform = &v
}

func (o CreateApplicationAPIKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["expires"] = o.Expires
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	return json.Marshal(toSerialize)
}

type NullableCreateApplicationAPIKey struct {
	value *CreateApplicationAPIKey
	isSet bool
}

func (v NullableCreateApplicationAPIKey) Get() *CreateApplicationAPIKey {
	return v.value
}

func (v *NullableCreateApplicationAPIKey) Set(val *CreateApplicationAPIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationAPIKey(val *CreateApplicationAPIKey) *NullableCreateApplicationAPIKey {
	return &NullableCreateApplicationAPIKey{value: val, isSet: true}
}

func (v NullableCreateApplicationAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


