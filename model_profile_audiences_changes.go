/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// ProfileAudiencesChanges struct for ProfileAudiencesChanges
type ProfileAudiencesChanges struct {
	// The IDs of the audiences for the customer to join.
	Adds []int32 `json:"adds"`
	// The IDs of the audiences for the customer to leave.
	Deletes []int32 `json:"deletes"`
}

// NewProfileAudiencesChanges instantiates a new ProfileAudiencesChanges object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileAudiencesChanges(adds []int32, deletes []int32) *ProfileAudiencesChanges {
	this := ProfileAudiencesChanges{}
	this.Adds = adds
	this.Deletes = deletes
	return &this
}

// NewProfileAudiencesChangesWithDefaults instantiates a new ProfileAudiencesChanges object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileAudiencesChangesWithDefaults() *ProfileAudiencesChanges {
	this := ProfileAudiencesChanges{}
	return &this
}

// GetAdds returns the Adds field value
func (o *ProfileAudiencesChanges) GetAdds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Adds
}

// GetAddsOk returns a tuple with the Adds field value
// and a boolean to check if the value has been set.
func (o *ProfileAudiencesChanges) GetAddsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Adds, true
}

// SetAdds sets field value
func (o *ProfileAudiencesChanges) SetAdds(v []int32) {
	o.Adds = v
}

// GetDeletes returns the Deletes field value
func (o *ProfileAudiencesChanges) GetDeletes() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Deletes
}

// GetDeletesOk returns a tuple with the Deletes field value
// and a boolean to check if the value has been set.
func (o *ProfileAudiencesChanges) GetDeletesOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deletes, true
}

// SetDeletes sets field value
func (o *ProfileAudiencesChanges) SetDeletes(v []int32) {
	o.Deletes = v
}

func (o ProfileAudiencesChanges) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adds"] = o.Adds
	}
	if true {
		toSerialize["deletes"] = o.Deletes
	}
	return json.Marshal(toSerialize)
}

type NullableProfileAudiencesChanges struct {
	value *ProfileAudiencesChanges
	isSet bool
}

func (v NullableProfileAudiencesChanges) Get() *ProfileAudiencesChanges {
	return v.value
}

func (v *NullableProfileAudiencesChanges) Set(val *ProfileAudiencesChanges) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileAudiencesChanges) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileAudiencesChanges) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileAudiencesChanges(val *ProfileAudiencesChanges) *NullableProfileAudiencesChanges {
	return &NullableProfileAudiencesChanges{value: val, isSet: true}
}

func (v NullableProfileAudiencesChanges) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileAudiencesChanges) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


