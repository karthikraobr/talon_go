/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// RollbackDiscountEffectProps The properties specific to the \"rollbackDiscount\" effect. This gets triggered whenever previously closed session is now cancelled or partially returned and a setDiscount effect was cancelled on our internal discount limit counters.
type RollbackDiscountEffectProps struct {
	// The name of the \"setDiscount\" effect that was rolled back.
	Name string `json:"name"`
	// The value of the discount that was rolled back.
	Value float32 `json:"value"`
	// The index of the item in the cart items for which the discount was rolled back.
	CartItemPosition *float32 `json:"cartItemPosition,omitempty"`
	// The index of the item unit in its line item. It is only used for cart items with `quantity` > 1 and is only returned when cart item flattening is enabled. 
	CartItemSubPosition *float32 `json:"cartItemSubPosition,omitempty"`
	// The ID of the additional cost that was rolled back.
	AdditionalCostId *int32 `json:"additionalCostId,omitempty"`
	// The name of the additional cost that was rolled back.
	AdditionalCost *string `json:"additionalCost,omitempty"`
	// The scope of the rolled back discount - For a discount per session, it can be one of `cartItems`, `additionalCosts` or `sessionTotal` - For a discount per item, it can be one of `price`, `additionalCosts` or `itemTotal` 
	Scope *string `json:"scope,omitempty"`
}

// NewRollbackDiscountEffectProps instantiates a new RollbackDiscountEffectProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRollbackDiscountEffectProps(name string, value float32) *RollbackDiscountEffectProps {
	this := RollbackDiscountEffectProps{}
	this.Name = name
	this.Value = value
	return &this
}

// NewRollbackDiscountEffectPropsWithDefaults instantiates a new RollbackDiscountEffectProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRollbackDiscountEffectPropsWithDefaults() *RollbackDiscountEffectProps {
	this := RollbackDiscountEffectProps{}
	return &this
}

// GetName returns the Name field value
func (o *RollbackDiscountEffectProps) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RollbackDiscountEffectProps) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *RollbackDiscountEffectProps) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *RollbackDiscountEffectProps) SetValue(v float32) {
	o.Value = v
}

// GetCartItemPosition returns the CartItemPosition field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetCartItemPosition() float32 {
	if o == nil || o.CartItemPosition == nil {
		var ret float32
		return ret
	}
	return *o.CartItemPosition
}

// GetCartItemPositionOk returns a tuple with the CartItemPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetCartItemPositionOk() (*float32, bool) {
	if o == nil || o.CartItemPosition == nil {
		return nil, false
	}
	return o.CartItemPosition, true
}

// HasCartItemPosition returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasCartItemPosition() bool {
	if o != nil && o.CartItemPosition != nil {
		return true
	}

	return false
}

// SetCartItemPosition gets a reference to the given float32 and assigns it to the CartItemPosition field.
func (o *RollbackDiscountEffectProps) SetCartItemPosition(v float32) {
	o.CartItemPosition = &v
}

// GetCartItemSubPosition returns the CartItemSubPosition field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetCartItemSubPosition() float32 {
	if o == nil || o.CartItemSubPosition == nil {
		var ret float32
		return ret
	}
	return *o.CartItemSubPosition
}

// GetCartItemSubPositionOk returns a tuple with the CartItemSubPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetCartItemSubPositionOk() (*float32, bool) {
	if o == nil || o.CartItemSubPosition == nil {
		return nil, false
	}
	return o.CartItemSubPosition, true
}

// HasCartItemSubPosition returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasCartItemSubPosition() bool {
	if o != nil && o.CartItemSubPosition != nil {
		return true
	}

	return false
}

// SetCartItemSubPosition gets a reference to the given float32 and assigns it to the CartItemSubPosition field.
func (o *RollbackDiscountEffectProps) SetCartItemSubPosition(v float32) {
	o.CartItemSubPosition = &v
}

// GetAdditionalCostId returns the AdditionalCostId field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetAdditionalCostId() int32 {
	if o == nil || o.AdditionalCostId == nil {
		var ret int32
		return ret
	}
	return *o.AdditionalCostId
}

// GetAdditionalCostIdOk returns a tuple with the AdditionalCostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetAdditionalCostIdOk() (*int32, bool) {
	if o == nil || o.AdditionalCostId == nil {
		return nil, false
	}
	return o.AdditionalCostId, true
}

// HasAdditionalCostId returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasAdditionalCostId() bool {
	if o != nil && o.AdditionalCostId != nil {
		return true
	}

	return false
}

// SetAdditionalCostId gets a reference to the given int32 and assigns it to the AdditionalCostId field.
func (o *RollbackDiscountEffectProps) SetAdditionalCostId(v int32) {
	o.AdditionalCostId = &v
}

// GetAdditionalCost returns the AdditionalCost field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetAdditionalCost() string {
	if o == nil || o.AdditionalCost == nil {
		var ret string
		return ret
	}
	return *o.AdditionalCost
}

// GetAdditionalCostOk returns a tuple with the AdditionalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetAdditionalCostOk() (*string, bool) {
	if o == nil || o.AdditionalCost == nil {
		return nil, false
	}
	return o.AdditionalCost, true
}

// HasAdditionalCost returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasAdditionalCost() bool {
	if o != nil && o.AdditionalCost != nil {
		return true
	}

	return false
}

// SetAdditionalCost gets a reference to the given string and assigns it to the AdditionalCost field.
func (o *RollbackDiscountEffectProps) SetAdditionalCost(v string) {
	o.AdditionalCost = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *RollbackDiscountEffectProps) SetScope(v string) {
	o.Scope = &v
}

func (o RollbackDiscountEffectProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if o.CartItemPosition != nil {
		toSerialize["cartItemPosition"] = o.CartItemPosition
	}
	if o.CartItemSubPosition != nil {
		toSerialize["cartItemSubPosition"] = o.CartItemSubPosition
	}
	if o.AdditionalCostId != nil {
		toSerialize["additionalCostId"] = o.AdditionalCostId
	}
	if o.AdditionalCost != nil {
		toSerialize["additionalCost"] = o.AdditionalCost
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableRollbackDiscountEffectProps struct {
	value *RollbackDiscountEffectProps
	isSet bool
}

func (v NullableRollbackDiscountEffectProps) Get() *RollbackDiscountEffectProps {
	return v.value
}

func (v *NullableRollbackDiscountEffectProps) Set(val *RollbackDiscountEffectProps) {
	v.value = val
	v.isSet = true
}

func (v NullableRollbackDiscountEffectProps) IsSet() bool {
	return v.isSet
}

func (v *NullableRollbackDiscountEffectProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRollbackDiscountEffectProps(val *RollbackDiscountEffectProps) *NullableRollbackDiscountEffectProps {
	return &NullableRollbackDiscountEffectProps{value: val, isSet: true}
}

func (v NullableRollbackDiscountEffectProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRollbackDiscountEffectProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


