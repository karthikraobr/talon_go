/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// ApplicationAPIKey 
type ApplicationAPIKey struct {
	// Title for API Key.
	Title string `json:"title"`
	// The date the API key expired.
	Expires time.Time `json:"expires"`
	// The third-party platform the API key is valid for. Use `none` for a generic API key to be used from your own integration layer. 
	Platform *string `json:"platform,omitempty"`
	// ID of the API Key.
	Id int32 `json:"id"`
	// ID of user who created.
	CreatedBy int32 `json:"createdBy"`
	// ID of account the key is used for.
	AccountID int32 `json:"accountID"`
	// ID of application the key is used for.
	ApplicationID int32 `json:"applicationID"`
	// The date the API key was created.
	Created time.Time `json:"created"`
}

// NewApplicationAPIKey instantiates a new ApplicationAPIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationAPIKey(title string, expires time.Time, id int32, createdBy int32, accountID int32, applicationID int32, created time.Time) *ApplicationAPIKey {
	this := ApplicationAPIKey{}
	this.Title = title
	this.Expires = expires
	this.Id = id
	this.CreatedBy = createdBy
	this.AccountID = accountID
	this.ApplicationID = applicationID
	this.Created = created
	return &this
}

// NewApplicationAPIKeyWithDefaults instantiates a new ApplicationAPIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationAPIKeyWithDefaults() *ApplicationAPIKey {
	this := ApplicationAPIKey{}
	return &this
}

// GetTitle returns the Title field value
func (o *ApplicationAPIKey) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ApplicationAPIKey) SetTitle(v string) {
	o.Title = v
}

// GetExpires returns the Expires field value
func (o *ApplicationAPIKey) GetExpires() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetExpiresOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *ApplicationAPIKey) SetExpires(v time.Time) {
	o.Expires = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ApplicationAPIKey) GetPlatform() string {
	if o == nil || o.Platform == nil {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetPlatformOk() (*string, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ApplicationAPIKey) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *ApplicationAPIKey) SetPlatform(v string) {
	o.Platform = &v
}

// GetId returns the Id field value
func (o *ApplicationAPIKey) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApplicationAPIKey) SetId(v int32) {
	o.Id = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ApplicationAPIKey) GetCreatedBy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetCreatedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ApplicationAPIKey) SetCreatedBy(v int32) {
	o.CreatedBy = v
}

// GetAccountID returns the AccountID field value
func (o *ApplicationAPIKey) GetAccountID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetAccountIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountID, true
}

// SetAccountID sets field value
func (o *ApplicationAPIKey) SetAccountID(v int32) {
	o.AccountID = v
}

// GetApplicationID returns the ApplicationID field value
func (o *ApplicationAPIKey) GetApplicationID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationID
}

// GetApplicationIDOk returns a tuple with the ApplicationID field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetApplicationIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationID, true
}

// SetApplicationID sets field value
func (o *ApplicationAPIKey) SetApplicationID(v int32) {
	o.ApplicationID = v
}

// GetCreated returns the Created field value
func (o *ApplicationAPIKey) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ApplicationAPIKey) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ApplicationAPIKey) SetCreated(v time.Time) {
	o.Created = v
}

func (o ApplicationAPIKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["expires"] = o.Expires
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if true {
		toSerialize["accountID"] = o.AccountID
	}
	if true {
		toSerialize["applicationID"] = o.ApplicationID
	}
	if true {
		toSerialize["created"] = o.Created
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationAPIKey struct {
	value *ApplicationAPIKey
	isSet bool
}

func (v NullableApplicationAPIKey) Get() *ApplicationAPIKey {
	return v.value
}

func (v *NullableApplicationAPIKey) Set(val *ApplicationAPIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationAPIKey(val *ApplicationAPIKey) *NullableApplicationAPIKey {
	return &NullableApplicationAPIKey{value: val, isSet: true}
}

func (v NullableApplicationAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


