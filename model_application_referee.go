/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// ApplicationReferee 
type ApplicationReferee struct {
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// Integration ID of the session in which the customer redeemed the referral.
	SessionId string `json:"sessionId"`
	// Integration ID of the Advocate's Profile.
	AdvocateIntegrationId string `json:"advocateIntegrationId"`
	// Integration ID of the Friend's Profile.
	FriendIntegrationId string `json:"friendIntegrationId"`
	// Advocate's referral code.
	Code string `json:"code"`
	// Timestamp of the moment the customer redeemed the referral.
	Created time.Time `json:"created"`
}

// NewApplicationReferee instantiates a new ApplicationReferee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationReferee(applicationId int32, sessionId string, advocateIntegrationId string, friendIntegrationId string, code string, created time.Time) *ApplicationReferee {
	this := ApplicationReferee{}
	this.ApplicationId = applicationId
	this.SessionId = sessionId
	this.AdvocateIntegrationId = advocateIntegrationId
	this.FriendIntegrationId = friendIntegrationId
	this.Code = code
	this.Created = created
	return &this
}

// NewApplicationRefereeWithDefaults instantiates a new ApplicationReferee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRefereeWithDefaults() *ApplicationReferee {
	this := ApplicationReferee{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *ApplicationReferee) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *ApplicationReferee) GetApplicationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *ApplicationReferee) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetSessionId returns the SessionId field value
func (o *ApplicationReferee) GetSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *ApplicationReferee) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *ApplicationReferee) SetSessionId(v string) {
	o.SessionId = v
}

// GetAdvocateIntegrationId returns the AdvocateIntegrationId field value
func (o *ApplicationReferee) GetAdvocateIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdvocateIntegrationId
}

// GetAdvocateIntegrationIdOk returns a tuple with the AdvocateIntegrationId field value
// and a boolean to check if the value has been set.
func (o *ApplicationReferee) GetAdvocateIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdvocateIntegrationId, true
}

// SetAdvocateIntegrationId sets field value
func (o *ApplicationReferee) SetAdvocateIntegrationId(v string) {
	o.AdvocateIntegrationId = v
}

// GetFriendIntegrationId returns the FriendIntegrationId field value
func (o *ApplicationReferee) GetFriendIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FriendIntegrationId
}

// GetFriendIntegrationIdOk returns a tuple with the FriendIntegrationId field value
// and a boolean to check if the value has been set.
func (o *ApplicationReferee) GetFriendIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FriendIntegrationId, true
}

// SetFriendIntegrationId sets field value
func (o *ApplicationReferee) SetFriendIntegrationId(v string) {
	o.FriendIntegrationId = v
}

// GetCode returns the Code field value
func (o *ApplicationReferee) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ApplicationReferee) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ApplicationReferee) SetCode(v string) {
	o.Code = v
}

// GetCreated returns the Created field value
func (o *ApplicationReferee) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ApplicationReferee) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ApplicationReferee) SetCreated(v time.Time) {
	o.Created = v
}

func (o ApplicationReferee) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if true {
		toSerialize["sessionId"] = o.SessionId
	}
	if true {
		toSerialize["advocateIntegrationId"] = o.AdvocateIntegrationId
	}
	if true {
		toSerialize["friendIntegrationId"] = o.FriendIntegrationId
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["created"] = o.Created
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationReferee struct {
	value *ApplicationReferee
	isSet bool
}

func (v NullableApplicationReferee) Get() *ApplicationReferee {
	return v.value
}

func (v *NullableApplicationReferee) Set(val *ApplicationReferee) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationReferee) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationReferee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationReferee(val *ApplicationReferee) *NullableApplicationReferee {
	return &NullableApplicationReferee{value: val, isSet: true}
}

func (v NullableApplicationReferee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationReferee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


