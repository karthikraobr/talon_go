/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// CampaignSetBranchNode struct for CampaignSetBranchNode
type CampaignSetBranchNode struct {
	// Indicates the node type.
	Type string `json:"type"`
	// Name of the set
	Name string `json:"name"`
	// How does the set operates on its elements.
	Operator string `json:"operator"`
	// Child elements of this set.
	Elements []CampaignSetNode `json:"elements"`
}

// NewCampaignSetBranchNode instantiates a new CampaignSetBranchNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignSetBranchNode(type_ string, name string, operator string, elements []CampaignSetNode) *CampaignSetBranchNode {
	this := CampaignSetBranchNode{}
	this.Type = type_
	this.Name = name
	this.Operator = operator
	this.Elements = elements
	return &this
}

// NewCampaignSetBranchNodeWithDefaults instantiates a new CampaignSetBranchNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignSetBranchNodeWithDefaults() *CampaignSetBranchNode {
	this := CampaignSetBranchNode{}
	return &this
}

// GetType returns the Type field value
func (o *CampaignSetBranchNode) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CampaignSetBranchNode) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CampaignSetBranchNode) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *CampaignSetBranchNode) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CampaignSetBranchNode) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CampaignSetBranchNode) SetName(v string) {
	o.Name = v
}

// GetOperator returns the Operator field value
func (o *CampaignSetBranchNode) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *CampaignSetBranchNode) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *CampaignSetBranchNode) SetOperator(v string) {
	o.Operator = v
}

// GetElements returns the Elements field value
func (o *CampaignSetBranchNode) GetElements() []CampaignSetNode {
	if o == nil {
		var ret []CampaignSetNode
		return ret
	}

	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value
// and a boolean to check if the value has been set.
func (o *CampaignSetBranchNode) GetElementsOk() ([]CampaignSetNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Elements, true
}

// SetElements sets field value
func (o *CampaignSetBranchNode) SetElements(v []CampaignSetNode) {
	o.Elements = v
}

func (o CampaignSetBranchNode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["operator"] = o.Operator
	}
	if true {
		toSerialize["elements"] = o.Elements
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignSetBranchNode struct {
	value *CampaignSetBranchNode
	isSet bool
}

func (v NullableCampaignSetBranchNode) Get() *CampaignSetBranchNode {
	return v.value
}

func (v *NullableCampaignSetBranchNode) Set(val *CampaignSetBranchNode) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignSetBranchNode) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignSetBranchNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignSetBranchNode(val *CampaignSetBranchNode) *NullableCampaignSetBranchNode {
	return &NullableCampaignSetBranchNode{value: val, isSet: true}
}

func (v NullableCampaignSetBranchNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignSetBranchNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


