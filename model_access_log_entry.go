/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// AccessLogEntry Log of application accesses.
type AccessLogEntry struct {
	// UUID reference of request.
	Uuid string `json:"uuid"`
	// HTTP status code of response.
	Status int32 `json:"status"`
	// HTTP method of request.
	Method string `json:"method"`
	// target URI of request
	RequestUri string `json:"requestUri"`
	// timestamp of request
	Time time.Time `json:"time"`
	// payload of request
	RequestPayload string `json:"requestPayload"`
	// payload of response
	ResponsePayload string `json:"responsePayload"`
}

// NewAccessLogEntry instantiates a new AccessLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessLogEntry(uuid string, status int32, method string, requestUri string, time time.Time, requestPayload string, responsePayload string) *AccessLogEntry {
	this := AccessLogEntry{}
	this.Uuid = uuid
	this.Status = status
	this.Method = method
	this.RequestUri = requestUri
	this.Time = time
	this.RequestPayload = requestPayload
	this.ResponsePayload = responsePayload
	return &this
}

// NewAccessLogEntryWithDefaults instantiates a new AccessLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessLogEntryWithDefaults() *AccessLogEntry {
	this := AccessLogEntry{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *AccessLogEntry) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *AccessLogEntry) SetUuid(v string) {
	o.Uuid = v
}

// GetStatus returns the Status field value
func (o *AccessLogEntry) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccessLogEntry) SetStatus(v int32) {
	o.Status = v
}

// GetMethod returns the Method field value
func (o *AccessLogEntry) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *AccessLogEntry) SetMethod(v string) {
	o.Method = v
}

// GetRequestUri returns the RequestUri field value
func (o *AccessLogEntry) GetRequestUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestUri
}

// GetRequestUriOk returns a tuple with the RequestUri field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetRequestUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestUri, true
}

// SetRequestUri sets field value
func (o *AccessLogEntry) SetRequestUri(v string) {
	o.RequestUri = v
}

// GetTime returns the Time field value
func (o *AccessLogEntry) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *AccessLogEntry) SetTime(v time.Time) {
	o.Time = v
}

// GetRequestPayload returns the RequestPayload field value
func (o *AccessLogEntry) GetRequestPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestPayload
}

// GetRequestPayloadOk returns a tuple with the RequestPayload field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetRequestPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestPayload, true
}

// SetRequestPayload sets field value
func (o *AccessLogEntry) SetRequestPayload(v string) {
	o.RequestPayload = v
}

// GetResponsePayload returns the ResponsePayload field value
func (o *AccessLogEntry) GetResponsePayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponsePayload
}

// GetResponsePayloadOk returns a tuple with the ResponsePayload field value
// and a boolean to check if the value has been set.
func (o *AccessLogEntry) GetResponsePayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponsePayload, true
}

// SetResponsePayload sets field value
func (o *AccessLogEntry) SetResponsePayload(v string) {
	o.ResponsePayload = v
}

func (o AccessLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["requestUri"] = o.RequestUri
	}
	if true {
		toSerialize["time"] = o.Time
	}
	if true {
		toSerialize["requestPayload"] = o.RequestPayload
	}
	if true {
		toSerialize["responsePayload"] = o.ResponsePayload
	}
	return json.Marshal(toSerialize)
}

type NullableAccessLogEntry struct {
	value *AccessLogEntry
	isSet bool
}

func (v NullableAccessLogEntry) Get() *AccessLogEntry {
	return v.value
}

func (v *NullableAccessLogEntry) Set(val *AccessLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessLogEntry(val *AccessLogEntry) *NullableAccessLogEntry {
	return &NullableAccessLogEntry{value: val, isSet: true}
}

func (v NullableAccessLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


