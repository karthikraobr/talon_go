/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// TriggerWebhookEffectProps The properties specific to the \"triggerWebhook\" effect. This gets triggered whenever a validated rule contained a \"trigger webhook\" effect. This is communicated as an FYI and should usually not require action on your side.
type TriggerWebhookEffectProps struct {
	// The ID of the webhook that was triggered.
	WebhookId float32 `json:"webhookId"`
	// The name of the webhook that was triggered.
	WebhookName string `json:"webhookName"`
}

// NewTriggerWebhookEffectProps instantiates a new TriggerWebhookEffectProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerWebhookEffectProps(webhookId float32, webhookName string) *TriggerWebhookEffectProps {
	this := TriggerWebhookEffectProps{}
	this.WebhookId = webhookId
	this.WebhookName = webhookName
	return &this
}

// NewTriggerWebhookEffectPropsWithDefaults instantiates a new TriggerWebhookEffectProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerWebhookEffectPropsWithDefaults() *TriggerWebhookEffectProps {
	this := TriggerWebhookEffectProps{}
	return &this
}

// GetWebhookId returns the WebhookId field value
func (o *TriggerWebhookEffectProps) GetWebhookId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *TriggerWebhookEffectProps) GetWebhookIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *TriggerWebhookEffectProps) SetWebhookId(v float32) {
	o.WebhookId = v
}

// GetWebhookName returns the WebhookName field value
func (o *TriggerWebhookEffectProps) GetWebhookName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookName
}

// GetWebhookNameOk returns a tuple with the WebhookName field value
// and a boolean to check if the value has been set.
func (o *TriggerWebhookEffectProps) GetWebhookNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookName, true
}

// SetWebhookName sets field value
func (o *TriggerWebhookEffectProps) SetWebhookName(v string) {
	o.WebhookName = v
}

func (o TriggerWebhookEffectProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhookId"] = o.WebhookId
	}
	if true {
		toSerialize["webhookName"] = o.WebhookName
	}
	return json.Marshal(toSerialize)
}

type NullableTriggerWebhookEffectProps struct {
	value *TriggerWebhookEffectProps
	isSet bool
}

func (v NullableTriggerWebhookEffectProps) Get() *TriggerWebhookEffectProps {
	return v.value
}

func (v *NullableTriggerWebhookEffectProps) Set(val *TriggerWebhookEffectProps) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerWebhookEffectProps) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerWebhookEffectProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerWebhookEffectProps(val *TriggerWebhookEffectProps) *NullableTriggerWebhookEffectProps {
	return &NullableTriggerWebhookEffectProps{value: val, isSet: true}
}

func (v NullableTriggerWebhookEffectProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerWebhookEffectProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


