/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// ReturnIntegrationRequest The body of a return integration API request. Next to the cart items details, this contains an optional listing of extra properties that should be returned in the response.
type ReturnIntegrationRequest struct {
	Return NewReturn `json:"return"`
	// Optional list of extra data that you want to get in the response. Use this property to get as much data as you need in one request instead of sending extra requests to other endpoints.  **Note:** `ruleFailureReasons` is always part of the response when the [Application type](https://docs.talon.one/docs/product/applications/overview#application-types) is `sandbox`. 
	ResponseContent []string `json:"responseContent,omitempty"`
}

// NewReturnIntegrationRequest instantiates a new ReturnIntegrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnIntegrationRequest(return_ NewReturn) *ReturnIntegrationRequest {
	this := ReturnIntegrationRequest{}
	this.Return = return_
	return &this
}

// NewReturnIntegrationRequestWithDefaults instantiates a new ReturnIntegrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnIntegrationRequestWithDefaults() *ReturnIntegrationRequest {
	this := ReturnIntegrationRequest{}
	return &this
}

// GetReturn returns the Return field value
func (o *ReturnIntegrationRequest) GetReturn() NewReturn {
	if o == nil {
		var ret NewReturn
		return ret
	}

	return o.Return
}

// GetReturnOk returns a tuple with the Return field value
// and a boolean to check if the value has been set.
func (o *ReturnIntegrationRequest) GetReturnOk() (*NewReturn, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Return, true
}

// SetReturn sets field value
func (o *ReturnIntegrationRequest) SetReturn(v NewReturn) {
	o.Return = v
}

// GetResponseContent returns the ResponseContent field value if set, zero value otherwise.
func (o *ReturnIntegrationRequest) GetResponseContent() []string {
	if o == nil || o.ResponseContent == nil {
		var ret []string
		return ret
	}
	return o.ResponseContent
}

// GetResponseContentOk returns a tuple with the ResponseContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnIntegrationRequest) GetResponseContentOk() ([]string, bool) {
	if o == nil || o.ResponseContent == nil {
		return nil, false
	}
	return o.ResponseContent, true
}

// HasResponseContent returns a boolean if a field has been set.
func (o *ReturnIntegrationRequest) HasResponseContent() bool {
	if o != nil && o.ResponseContent != nil {
		return true
	}

	return false
}

// SetResponseContent gets a reference to the given []string and assigns it to the ResponseContent field.
func (o *ReturnIntegrationRequest) SetResponseContent(v []string) {
	o.ResponseContent = v
}

func (o ReturnIntegrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["return"] = o.Return
	}
	if o.ResponseContent != nil {
		toSerialize["responseContent"] = o.ResponseContent
	}
	return json.Marshal(toSerialize)
}

type NullableReturnIntegrationRequest struct {
	value *ReturnIntegrationRequest
	isSet bool
}

func (v NullableReturnIntegrationRequest) Get() *ReturnIntegrationRequest {
	return v.value
}

func (v *NullableReturnIntegrationRequest) Set(val *ReturnIntegrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnIntegrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnIntegrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnIntegrationRequest(val *ReturnIntegrationRequest) *NullableReturnIntegrationRequest {
	return &NullableReturnIntegrationRequest{value: val, isSet: true}
}

func (v NullableReturnIntegrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnIntegrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


