/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// CustomerProfile 
type CustomerProfile struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created. The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The integration ID set by your integration layer.
	IntegrationId string `json:"integrationId"`
	// Arbitrary properties associated with this item.
	Attributes map[string]interface{} `json:"attributes"`
	// The ID of the Talon.One account that owns this profile.
	AccountId int32 `json:"accountId"`
	// The total amount of closed sessions by a customer. A closed session is a successful purchase.
	ClosedSessions int32 `json:"closedSessions"`
	// Sum of all purchases made by this customer.
	TotalSales float32 `json:"totalSales"`
	// **DEPRECATED** A list of loyalty programs joined by the customer. 
	LoyaltyMemberships []LoyaltyMembership `json:"loyaltyMemberships,omitempty"`
	// A list of audiences the customer belongs to.
	AudienceMemberships []AudienceMembership `json:"audienceMemberships,omitempty"`
	// Timestamp of the most recent event received from this customer. This field is updated on calls that trigger the rule-engine and that are not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).  For example, [reserving a coupon](https://docs.talon.one/integration-api/#operation/createCouponReservation) for a customer doesn't impact this field. 
	LastActivity time.Time `json:"lastActivity"`
}

// NewCustomerProfile instantiates a new CustomerProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerProfile(id int32, created time.Time, integrationId string, attributes map[string]interface{}, accountId int32, closedSessions int32, totalSales float32, lastActivity time.Time) *CustomerProfile {
	this := CustomerProfile{}
	this.Id = id
	this.Created = created
	this.IntegrationId = integrationId
	this.Attributes = attributes
	this.AccountId = accountId
	this.ClosedSessions = closedSessions
	this.TotalSales = totalSales
	this.LastActivity = lastActivity
	return &this
}

// NewCustomerProfileWithDefaults instantiates a new CustomerProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerProfileWithDefaults() *CustomerProfile {
	this := CustomerProfile{}
	return &this
}

// GetId returns the Id field value
func (o *CustomerProfile) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomerProfile) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *CustomerProfile) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *CustomerProfile) SetCreated(v time.Time) {
	o.Created = v
}

// GetIntegrationId returns the IntegrationId field value
func (o *CustomerProfile) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *CustomerProfile) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetAttributes returns the Attributes field value
func (o *CustomerProfile) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *CustomerProfile) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetAccountId returns the AccountId field value
func (o *CustomerProfile) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CustomerProfile) SetAccountId(v int32) {
	o.AccountId = v
}

// GetClosedSessions returns the ClosedSessions field value
func (o *CustomerProfile) GetClosedSessions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClosedSessions
}

// GetClosedSessionsOk returns a tuple with the ClosedSessions field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetClosedSessionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClosedSessions, true
}

// SetClosedSessions sets field value
func (o *CustomerProfile) SetClosedSessions(v int32) {
	o.ClosedSessions = v
}

// GetTotalSales returns the TotalSales field value
func (o *CustomerProfile) GetTotalSales() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalSales
}

// GetTotalSalesOk returns a tuple with the TotalSales field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetTotalSalesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalSales, true
}

// SetTotalSales sets field value
func (o *CustomerProfile) SetTotalSales(v float32) {
	o.TotalSales = v
}

// GetLoyaltyMemberships returns the LoyaltyMemberships field value if set, zero value otherwise.
func (o *CustomerProfile) GetLoyaltyMemberships() []LoyaltyMembership {
	if o == nil || o.LoyaltyMemberships == nil {
		var ret []LoyaltyMembership
		return ret
	}
	return o.LoyaltyMemberships
}

// GetLoyaltyMembershipsOk returns a tuple with the LoyaltyMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetLoyaltyMembershipsOk() ([]LoyaltyMembership, bool) {
	if o == nil || o.LoyaltyMemberships == nil {
		return nil, false
	}
	return o.LoyaltyMemberships, true
}

// HasLoyaltyMemberships returns a boolean if a field has been set.
func (o *CustomerProfile) HasLoyaltyMemberships() bool {
	if o != nil && o.LoyaltyMemberships != nil {
		return true
	}

	return false
}

// SetLoyaltyMemberships gets a reference to the given []LoyaltyMembership and assigns it to the LoyaltyMemberships field.
func (o *CustomerProfile) SetLoyaltyMemberships(v []LoyaltyMembership) {
	o.LoyaltyMemberships = v
}

// GetAudienceMemberships returns the AudienceMemberships field value if set, zero value otherwise.
func (o *CustomerProfile) GetAudienceMemberships() []AudienceMembership {
	if o == nil || o.AudienceMemberships == nil {
		var ret []AudienceMembership
		return ret
	}
	return o.AudienceMemberships
}

// GetAudienceMembershipsOk returns a tuple with the AudienceMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetAudienceMembershipsOk() ([]AudienceMembership, bool) {
	if o == nil || o.AudienceMemberships == nil {
		return nil, false
	}
	return o.AudienceMemberships, true
}

// HasAudienceMemberships returns a boolean if a field has been set.
func (o *CustomerProfile) HasAudienceMemberships() bool {
	if o != nil && o.AudienceMemberships != nil {
		return true
	}

	return false
}

// SetAudienceMemberships gets a reference to the given []AudienceMembership and assigns it to the AudienceMemberships field.
func (o *CustomerProfile) SetAudienceMemberships(v []AudienceMembership) {
	o.AudienceMemberships = v
}

// GetLastActivity returns the LastActivity field value
func (o *CustomerProfile) GetLastActivity() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastActivity
}

// GetLastActivityOk returns a tuple with the LastActivity field value
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetLastActivityOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastActivity, true
}

// SetLastActivity sets field value
func (o *CustomerProfile) SetLastActivity(v time.Time) {
	o.LastActivity = v
}

func (o CustomerProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["integrationId"] = o.IntegrationId
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["closedSessions"] = o.ClosedSessions
	}
	if true {
		toSerialize["totalSales"] = o.TotalSales
	}
	if o.LoyaltyMemberships != nil {
		toSerialize["loyaltyMemberships"] = o.LoyaltyMemberships
	}
	if o.AudienceMemberships != nil {
		toSerialize["audienceMemberships"] = o.AudienceMemberships
	}
	if true {
		toSerialize["lastActivity"] = o.LastActivity
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerProfile struct {
	value *CustomerProfile
	isSet bool
}

func (v NullableCustomerProfile) Get() *CustomerProfile {
	return v.value
}

func (v *NullableCustomerProfile) Set(val *CustomerProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerProfile(val *CustomerProfile) *NullableCustomerProfile {
	return &NullableCustomerProfile{value: val, isSet: true}
}

func (v NullableCustomerProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


