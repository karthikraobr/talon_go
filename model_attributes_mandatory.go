/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// AttributesMandatory Arbitrary settings associated with attributes.
type AttributesMandatory struct {
	// List of mandatory attributes for campaigns.
	Campaigns []string `json:"campaigns,omitempty"`
	// List of mandatory attributes for campaigns.
	Coupons []string `json:"coupons,omitempty"`
}

// NewAttributesMandatory instantiates a new AttributesMandatory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributesMandatory() *AttributesMandatory {
	this := AttributesMandatory{}
	return &this
}

// NewAttributesMandatoryWithDefaults instantiates a new AttributesMandatory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributesMandatoryWithDefaults() *AttributesMandatory {
	this := AttributesMandatory{}
	return &this
}

// GetCampaigns returns the Campaigns field value if set, zero value otherwise.
func (o *AttributesMandatory) GetCampaigns() []string {
	if o == nil || o.Campaigns == nil {
		var ret []string
		return ret
	}
	return o.Campaigns
}

// GetCampaignsOk returns a tuple with the Campaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributesMandatory) GetCampaignsOk() ([]string, bool) {
	if o == nil || o.Campaigns == nil {
		return nil, false
	}
	return o.Campaigns, true
}

// HasCampaigns returns a boolean if a field has been set.
func (o *AttributesMandatory) HasCampaigns() bool {
	if o != nil && o.Campaigns != nil {
		return true
	}

	return false
}

// SetCampaigns gets a reference to the given []string and assigns it to the Campaigns field.
func (o *AttributesMandatory) SetCampaigns(v []string) {
	o.Campaigns = v
}

// GetCoupons returns the Coupons field value if set, zero value otherwise.
func (o *AttributesMandatory) GetCoupons() []string {
	if o == nil || o.Coupons == nil {
		var ret []string
		return ret
	}
	return o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributesMandatory) GetCouponsOk() ([]string, bool) {
	if o == nil || o.Coupons == nil {
		return nil, false
	}
	return o.Coupons, true
}

// HasCoupons returns a boolean if a field has been set.
func (o *AttributesMandatory) HasCoupons() bool {
	if o != nil && o.Coupons != nil {
		return true
	}

	return false
}

// SetCoupons gets a reference to the given []string and assigns it to the Coupons field.
func (o *AttributesMandatory) SetCoupons(v []string) {
	o.Coupons = v
}

func (o AttributesMandatory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Campaigns != nil {
		toSerialize["campaigns"] = o.Campaigns
	}
	if o.Coupons != nil {
		toSerialize["coupons"] = o.Coupons
	}
	return json.Marshal(toSerialize)
}

type NullableAttributesMandatory struct {
	value *AttributesMandatory
	isSet bool
}

func (v NullableAttributesMandatory) Get() *AttributesMandatory {
	return v.value
}

func (v *NullableAttributesMandatory) Set(val *AttributesMandatory) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributesMandatory) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributesMandatory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributesMandatory(val *AttributesMandatory) *NullableAttributesMandatory {
	return &NullableAttributesMandatory{value: val, isSet: true}
}

func (v NullableAttributesMandatory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributesMandatory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


