/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// RedeemReferralEffectProps The properties specific to the \"redeemReferral\" effect. This gets triggered whenever the referral code is valid, and a rule was triggered that contains a \"redeem referral\" effect.
type RedeemReferralEffectProps struct {
	// The id of the referral code that was redeemed.
	Id int32 `json:"id"`
	// The referral code that was redeemed.
	Value string `json:"value"`
}

// NewRedeemReferralEffectProps instantiates a new RedeemReferralEffectProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedeemReferralEffectProps(id int32, value string) *RedeemReferralEffectProps {
	this := RedeemReferralEffectProps{}
	this.Id = id
	this.Value = value
	return &this
}

// NewRedeemReferralEffectPropsWithDefaults instantiates a new RedeemReferralEffectProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedeemReferralEffectPropsWithDefaults() *RedeemReferralEffectProps {
	this := RedeemReferralEffectProps{}
	return &this
}

// GetId returns the Id field value
func (o *RedeemReferralEffectProps) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RedeemReferralEffectProps) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RedeemReferralEffectProps) SetId(v int32) {
	o.Id = v
}

// GetValue returns the Value field value
func (o *RedeemReferralEffectProps) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *RedeemReferralEffectProps) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *RedeemReferralEffectProps) SetValue(v string) {
	o.Value = v
}

func (o RedeemReferralEffectProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableRedeemReferralEffectProps struct {
	value *RedeemReferralEffectProps
	isSet bool
}

func (v NullableRedeemReferralEffectProps) Get() *RedeemReferralEffectProps {
	return v.value
}

func (v *NullableRedeemReferralEffectProps) Set(val *RedeemReferralEffectProps) {
	v.value = val
	v.isSet = true
}

func (v NullableRedeemReferralEffectProps) IsSet() bool {
	return v.isSet
}

func (v *NullableRedeemReferralEffectProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedeemReferralEffectProps(val *RedeemReferralEffectProps) *NullableRedeemReferralEffectProps {
	return &NullableRedeemReferralEffectProps{value: val, isSet: true}
}

func (v NullableRedeemReferralEffectProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedeemReferralEffectProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


