/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// RuleFailureReason Details about why a rule failed.
type RuleFailureReason struct {
	// The ID of the campaign that contains the rule that failed.
	CampaignID int32 `json:"campaignID"`
	// The name of the campaign that contains the rule that failed.
	CampaignName string `json:"campaignName"`
	// The ID of the ruleset that contains the rule that failed.
	RulesetID int32 `json:"rulesetID"`
	// The ID of the coupon that was being evaluated at the time of the rule failure.
	CouponID *int32 `json:"couponID,omitempty"`
	// The code of the coupon that was being evaluated at the time of the rule failure.
	CouponValue *string `json:"couponValue,omitempty"`
	// The ID of the referral that was being evaluated at the time of the rule failure.
	ReferralID *int32 `json:"referralID,omitempty"`
	// The code of the referral that was being evaluated at the time of the rule failure.
	ReferralValue *string `json:"referralValue,omitempty"`
	// The index of the rule that failed within the ruleset.
	RuleIndex int32 `json:"ruleIndex"`
	// The name of the rule that failed within the ruleset.
	RuleName string `json:"ruleName"`
	// The index of the condition that failed.
	ConditionIndex *int32 `json:"conditionIndex,omitempty"`
	// The index of the effect that failed.
	EffectIndex *int32 `json:"effectIndex,omitempty"`
	// More details about the failure.
	Details *string `json:"details,omitempty"`
}

// NewRuleFailureReason instantiates a new RuleFailureReason object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleFailureReason(campaignID int32, campaignName string, rulesetID int32, ruleIndex int32, ruleName string) *RuleFailureReason {
	this := RuleFailureReason{}
	this.CampaignID = campaignID
	this.CampaignName = campaignName
	this.RulesetID = rulesetID
	this.RuleIndex = ruleIndex
	this.RuleName = ruleName
	return &this
}

// NewRuleFailureReasonWithDefaults instantiates a new RuleFailureReason object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleFailureReasonWithDefaults() *RuleFailureReason {
	this := RuleFailureReason{}
	return &this
}

// GetCampaignID returns the CampaignID field value
func (o *RuleFailureReason) GetCampaignID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignID
}

// GetCampaignIDOk returns a tuple with the CampaignID field value
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetCampaignIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignID, true
}

// SetCampaignID sets field value
func (o *RuleFailureReason) SetCampaignID(v int32) {
	o.CampaignID = v
}

// GetCampaignName returns the CampaignName field value
func (o *RuleFailureReason) GetCampaignName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CampaignName
}

// GetCampaignNameOk returns a tuple with the CampaignName field value
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetCampaignNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignName, true
}

// SetCampaignName sets field value
func (o *RuleFailureReason) SetCampaignName(v string) {
	o.CampaignName = v
}

// GetRulesetID returns the RulesetID field value
func (o *RuleFailureReason) GetRulesetID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RulesetID
}

// GetRulesetIDOk returns a tuple with the RulesetID field value
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetRulesetIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RulesetID, true
}

// SetRulesetID sets field value
func (o *RuleFailureReason) SetRulesetID(v int32) {
	o.RulesetID = v
}

// GetCouponID returns the CouponID field value if set, zero value otherwise.
func (o *RuleFailureReason) GetCouponID() int32 {
	if o == nil || o.CouponID == nil {
		var ret int32
		return ret
	}
	return *o.CouponID
}

// GetCouponIDOk returns a tuple with the CouponID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetCouponIDOk() (*int32, bool) {
	if o == nil || o.CouponID == nil {
		return nil, false
	}
	return o.CouponID, true
}

// HasCouponID returns a boolean if a field has been set.
func (o *RuleFailureReason) HasCouponID() bool {
	if o != nil && o.CouponID != nil {
		return true
	}

	return false
}

// SetCouponID gets a reference to the given int32 and assigns it to the CouponID field.
func (o *RuleFailureReason) SetCouponID(v int32) {
	o.CouponID = &v
}

// GetCouponValue returns the CouponValue field value if set, zero value otherwise.
func (o *RuleFailureReason) GetCouponValue() string {
	if o == nil || o.CouponValue == nil {
		var ret string
		return ret
	}
	return *o.CouponValue
}

// GetCouponValueOk returns a tuple with the CouponValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetCouponValueOk() (*string, bool) {
	if o == nil || o.CouponValue == nil {
		return nil, false
	}
	return o.CouponValue, true
}

// HasCouponValue returns a boolean if a field has been set.
func (o *RuleFailureReason) HasCouponValue() bool {
	if o != nil && o.CouponValue != nil {
		return true
	}

	return false
}

// SetCouponValue gets a reference to the given string and assigns it to the CouponValue field.
func (o *RuleFailureReason) SetCouponValue(v string) {
	o.CouponValue = &v
}

// GetReferralID returns the ReferralID field value if set, zero value otherwise.
func (o *RuleFailureReason) GetReferralID() int32 {
	if o == nil || o.ReferralID == nil {
		var ret int32
		return ret
	}
	return *o.ReferralID
}

// GetReferralIDOk returns a tuple with the ReferralID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetReferralIDOk() (*int32, bool) {
	if o == nil || o.ReferralID == nil {
		return nil, false
	}
	return o.ReferralID, true
}

// HasReferralID returns a boolean if a field has been set.
func (o *RuleFailureReason) HasReferralID() bool {
	if o != nil && o.ReferralID != nil {
		return true
	}

	return false
}

// SetReferralID gets a reference to the given int32 and assigns it to the ReferralID field.
func (o *RuleFailureReason) SetReferralID(v int32) {
	o.ReferralID = &v
}

// GetReferralValue returns the ReferralValue field value if set, zero value otherwise.
func (o *RuleFailureReason) GetReferralValue() string {
	if o == nil || o.ReferralValue == nil {
		var ret string
		return ret
	}
	return *o.ReferralValue
}

// GetReferralValueOk returns a tuple with the ReferralValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetReferralValueOk() (*string, bool) {
	if o == nil || o.ReferralValue == nil {
		return nil, false
	}
	return o.ReferralValue, true
}

// HasReferralValue returns a boolean if a field has been set.
func (o *RuleFailureReason) HasReferralValue() bool {
	if o != nil && o.ReferralValue != nil {
		return true
	}

	return false
}

// SetReferralValue gets a reference to the given string and assigns it to the ReferralValue field.
func (o *RuleFailureReason) SetReferralValue(v string) {
	o.ReferralValue = &v
}

// GetRuleIndex returns the RuleIndex field value
func (o *RuleFailureReason) GetRuleIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RuleIndex
}

// GetRuleIndexOk returns a tuple with the RuleIndex field value
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetRuleIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleIndex, true
}

// SetRuleIndex sets field value
func (o *RuleFailureReason) SetRuleIndex(v int32) {
	o.RuleIndex = v
}

// GetRuleName returns the RuleName field value
func (o *RuleFailureReason) GetRuleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetRuleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleName, true
}

// SetRuleName sets field value
func (o *RuleFailureReason) SetRuleName(v string) {
	o.RuleName = v
}

// GetConditionIndex returns the ConditionIndex field value if set, zero value otherwise.
func (o *RuleFailureReason) GetConditionIndex() int32 {
	if o == nil || o.ConditionIndex == nil {
		var ret int32
		return ret
	}
	return *o.ConditionIndex
}

// GetConditionIndexOk returns a tuple with the ConditionIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetConditionIndexOk() (*int32, bool) {
	if o == nil || o.ConditionIndex == nil {
		return nil, false
	}
	return o.ConditionIndex, true
}

// HasConditionIndex returns a boolean if a field has been set.
func (o *RuleFailureReason) HasConditionIndex() bool {
	if o != nil && o.ConditionIndex != nil {
		return true
	}

	return false
}

// SetConditionIndex gets a reference to the given int32 and assigns it to the ConditionIndex field.
func (o *RuleFailureReason) SetConditionIndex(v int32) {
	o.ConditionIndex = &v
}

// GetEffectIndex returns the EffectIndex field value if set, zero value otherwise.
func (o *RuleFailureReason) GetEffectIndex() int32 {
	if o == nil || o.EffectIndex == nil {
		var ret int32
		return ret
	}
	return *o.EffectIndex
}

// GetEffectIndexOk returns a tuple with the EffectIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetEffectIndexOk() (*int32, bool) {
	if o == nil || o.EffectIndex == nil {
		return nil, false
	}
	return o.EffectIndex, true
}

// HasEffectIndex returns a boolean if a field has been set.
func (o *RuleFailureReason) HasEffectIndex() bool {
	if o != nil && o.EffectIndex != nil {
		return true
	}

	return false
}

// SetEffectIndex gets a reference to the given int32 and assigns it to the EffectIndex field.
func (o *RuleFailureReason) SetEffectIndex(v int32) {
	o.EffectIndex = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *RuleFailureReason) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFailureReason) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *RuleFailureReason) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *RuleFailureReason) SetDetails(v string) {
	o.Details = &v
}

func (o RuleFailureReason) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["campaignID"] = o.CampaignID
	}
	if true {
		toSerialize["campaignName"] = o.CampaignName
	}
	if true {
		toSerialize["rulesetID"] = o.RulesetID
	}
	if o.CouponID != nil {
		toSerialize["couponID"] = o.CouponID
	}
	if o.CouponValue != nil {
		toSerialize["couponValue"] = o.CouponValue
	}
	if o.ReferralID != nil {
		toSerialize["referralID"] = o.ReferralID
	}
	if o.ReferralValue != nil {
		toSerialize["referralValue"] = o.ReferralValue
	}
	if true {
		toSerialize["ruleIndex"] = o.RuleIndex
	}
	if true {
		toSerialize["ruleName"] = o.RuleName
	}
	if o.ConditionIndex != nil {
		toSerialize["conditionIndex"] = o.ConditionIndex
	}
	if o.EffectIndex != nil {
		toSerialize["effectIndex"] = o.EffectIndex
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableRuleFailureReason struct {
	value *RuleFailureReason
	isSet bool
}

func (v NullableRuleFailureReason) Get() *RuleFailureReason {
	return v.value
}

func (v *NullableRuleFailureReason) Set(val *RuleFailureReason) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleFailureReason) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleFailureReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleFailureReason(val *RuleFailureReason) *NullableRuleFailureReason {
	return &NullableRuleFailureReason{value: val, isSet: true}
}

func (v NullableRuleFailureReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleFailureReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


