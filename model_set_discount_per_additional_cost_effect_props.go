/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// SetDiscountPerAdditionalCostEffectProps The properties specific to the \"setDiscountPerAdditionalCost\" effect. This gets triggered whenever a validated rule contained a \"set per additional cost discount\" effect. This is a discount that should be applied on a specific additional cost.
type SetDiscountPerAdditionalCostEffectProps struct {
	// The name/description of this discount.
	Name string `json:"name"`
	// The ID of the additional cost.
	AdditionalCostId int32 `json:"additionalCostId"`
	// The name of the additional cost.
	AdditionalCost string `json:"additionalCost"`
	// The total monetary value of the discount.
	Value float32 `json:"value"`
	// The original value of the discount.
	DesiredValue *float32 `json:"desiredValue,omitempty"`
}

// NewSetDiscountPerAdditionalCostEffectProps instantiates a new SetDiscountPerAdditionalCostEffectProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDiscountPerAdditionalCostEffectProps(name string, additionalCostId int32, additionalCost string, value float32) *SetDiscountPerAdditionalCostEffectProps {
	this := SetDiscountPerAdditionalCostEffectProps{}
	this.Name = name
	this.AdditionalCostId = additionalCostId
	this.AdditionalCost = additionalCost
	this.Value = value
	return &this
}

// NewSetDiscountPerAdditionalCostEffectPropsWithDefaults instantiates a new SetDiscountPerAdditionalCostEffectProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDiscountPerAdditionalCostEffectPropsWithDefaults() *SetDiscountPerAdditionalCostEffectProps {
	this := SetDiscountPerAdditionalCostEffectProps{}
	return &this
}

// GetName returns the Name field value
func (o *SetDiscountPerAdditionalCostEffectProps) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostEffectProps) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SetDiscountPerAdditionalCostEffectProps) SetName(v string) {
	o.Name = v
}

// GetAdditionalCostId returns the AdditionalCostId field value
func (o *SetDiscountPerAdditionalCostEffectProps) GetAdditionalCostId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdditionalCostId
}

// GetAdditionalCostIdOk returns a tuple with the AdditionalCostId field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostEffectProps) GetAdditionalCostIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalCostId, true
}

// SetAdditionalCostId sets field value
func (o *SetDiscountPerAdditionalCostEffectProps) SetAdditionalCostId(v int32) {
	o.AdditionalCostId = v
}

// GetAdditionalCost returns the AdditionalCost field value
func (o *SetDiscountPerAdditionalCostEffectProps) GetAdditionalCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdditionalCost
}

// GetAdditionalCostOk returns a tuple with the AdditionalCost field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostEffectProps) GetAdditionalCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalCost, true
}

// SetAdditionalCost sets field value
func (o *SetDiscountPerAdditionalCostEffectProps) SetAdditionalCost(v string) {
	o.AdditionalCost = v
}

// GetValue returns the Value field value
func (o *SetDiscountPerAdditionalCostEffectProps) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostEffectProps) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SetDiscountPerAdditionalCostEffectProps) SetValue(v float32) {
	o.Value = v
}

// GetDesiredValue returns the DesiredValue field value if set, zero value otherwise.
func (o *SetDiscountPerAdditionalCostEffectProps) GetDesiredValue() float32 {
	if o == nil || o.DesiredValue == nil {
		var ret float32
		return ret
	}
	return *o.DesiredValue
}

// GetDesiredValueOk returns a tuple with the DesiredValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDiscountPerAdditionalCostEffectProps) GetDesiredValueOk() (*float32, bool) {
	if o == nil || o.DesiredValue == nil {
		return nil, false
	}
	return o.DesiredValue, true
}

// HasDesiredValue returns a boolean if a field has been set.
func (o *SetDiscountPerAdditionalCostEffectProps) HasDesiredValue() bool {
	if o != nil && o.DesiredValue != nil {
		return true
	}

	return false
}

// SetDesiredValue gets a reference to the given float32 and assigns it to the DesiredValue field.
func (o *SetDiscountPerAdditionalCostEffectProps) SetDesiredValue(v float32) {
	o.DesiredValue = &v
}

func (o SetDiscountPerAdditionalCostEffectProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["additionalCostId"] = o.AdditionalCostId
	}
	if true {
		toSerialize["additionalCost"] = o.AdditionalCost
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if o.DesiredValue != nil {
		toSerialize["desiredValue"] = o.DesiredValue
	}
	return json.Marshal(toSerialize)
}

type NullableSetDiscountPerAdditionalCostEffectProps struct {
	value *SetDiscountPerAdditionalCostEffectProps
	isSet bool
}

func (v NullableSetDiscountPerAdditionalCostEffectProps) Get() *SetDiscountPerAdditionalCostEffectProps {
	return v.value
}

func (v *NullableSetDiscountPerAdditionalCostEffectProps) Set(val *SetDiscountPerAdditionalCostEffectProps) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDiscountPerAdditionalCostEffectProps) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDiscountPerAdditionalCostEffectProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDiscountPerAdditionalCostEffectProps(val *SetDiscountPerAdditionalCostEffectProps) *NullableSetDiscountPerAdditionalCostEffectProps {
	return &NullableSetDiscountPerAdditionalCostEffectProps{value: val, isSet: true}
}

func (v NullableSetDiscountPerAdditionalCostEffectProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDiscountPerAdditionalCostEffectProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


