/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// CouponCreationJob 
type CouponCreationJob struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The ID of the campaign that owns this entity.
	CampaignId int32 `json:"campaignId"`
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// The ID of the account that owns this entity.
	AccountId int32 `json:"accountId"`
	// The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply. 
	UsageLimit int32 `json:"usageLimit"`
	// The amount of discounts that can be given with this coupon code. 
	DiscountLimit *float32 `json:"discountLimit,omitempty"`
	// Timestamp at which point the coupon becomes valid.
	StartDate *time.Time `json:"startDate,omitempty"`
	// Expiry date of the coupon. Coupon never expires if this is omitted, zero, or negative.
	ExpiryDate *time.Time `json:"expiryDate,omitempty"`
	// The number of new coupon codes to generate for the campaign. Must be between 20,001 and 5,000,000.
	NumberOfCoupons int32 `json:"numberOfCoupons"`
	CouponSettings *CodeGeneratorSettings `json:"couponSettings,omitempty"`
	// Arbitrary properties associated with coupons.
	Attributes map[string]interface{} `json:"attributes"`
	// The batch ID coupons created by this job will bear.
	BatchId string `json:"batchId"`
	// The current status of this request. Possible values: - `pending` - `completed` - `failed` - `coupon pattern full` 
	Status string `json:"status"`
	// The number of coupon codes that were already created for this request.
	CreatedAmount int32 `json:"createdAmount"`
	// The number of times this job failed.
	FailCount int32 `json:"failCount"`
	// An array of individual problems encountered during the request.
	Errors []string `json:"errors"`
	// ID of the user who created this effect.
	CreatedBy int32 `json:"createdBy"`
	// Whether or not the user that created this job was notified of its final state.
	Communicated bool `json:"communicated"`
	// The number of times an attempt to create a chunk of coupons was made during the processing of the job.
	ChunkExecutionCount int32 `json:"chunkExecutionCount"`
	// The number of coupons that will be created in a single transactions. Coupons will be created in chunks until arriving at the requested amount.
	ChunkSize *int32 `json:"chunkSize,omitempty"`
}

// NewCouponCreationJob instantiates a new CouponCreationJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCouponCreationJob(id int32, created time.Time, campaignId int32, applicationId int32, accountId int32, usageLimit int32, numberOfCoupons int32, attributes map[string]interface{}, batchId string, status string, createdAmount int32, failCount int32, errors []string, createdBy int32, communicated bool, chunkExecutionCount int32) *CouponCreationJob {
	this := CouponCreationJob{}
	this.Id = id
	this.Created = created
	this.CampaignId = campaignId
	this.ApplicationId = applicationId
	this.AccountId = accountId
	this.UsageLimit = usageLimit
	this.NumberOfCoupons = numberOfCoupons
	this.Attributes = attributes
	this.BatchId = batchId
	this.Status = status
	this.CreatedAmount = createdAmount
	this.FailCount = failCount
	this.Errors = errors
	this.CreatedBy = createdBy
	this.Communicated = communicated
	this.ChunkExecutionCount = chunkExecutionCount
	return &this
}

// NewCouponCreationJobWithDefaults instantiates a new CouponCreationJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCouponCreationJobWithDefaults() *CouponCreationJob {
	this := CouponCreationJob{}
	return &this
}

// GetId returns the Id field value
func (o *CouponCreationJob) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CouponCreationJob) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *CouponCreationJob) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *CouponCreationJob) SetCreated(v time.Time) {
	o.Created = v
}

// GetCampaignId returns the CampaignId field value
func (o *CouponCreationJob) GetCampaignId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetCampaignIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignId, true
}

// SetCampaignId sets field value
func (o *CouponCreationJob) SetCampaignId(v int32) {
	o.CampaignId = v
}

// GetApplicationId returns the ApplicationId field value
func (o *CouponCreationJob) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetApplicationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *CouponCreationJob) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetAccountId returns the AccountId field value
func (o *CouponCreationJob) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CouponCreationJob) SetAccountId(v int32) {
	o.AccountId = v
}

// GetUsageLimit returns the UsageLimit field value
func (o *CouponCreationJob) GetUsageLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UsageLimit
}

// GetUsageLimitOk returns a tuple with the UsageLimit field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetUsageLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsageLimit, true
}

// SetUsageLimit sets field value
func (o *CouponCreationJob) SetUsageLimit(v int32) {
	o.UsageLimit = v
}

// GetDiscountLimit returns the DiscountLimit field value if set, zero value otherwise.
func (o *CouponCreationJob) GetDiscountLimit() float32 {
	if o == nil || o.DiscountLimit == nil {
		var ret float32
		return ret
	}
	return *o.DiscountLimit
}

// GetDiscountLimitOk returns a tuple with the DiscountLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetDiscountLimitOk() (*float32, bool) {
	if o == nil || o.DiscountLimit == nil {
		return nil, false
	}
	return o.DiscountLimit, true
}

// HasDiscountLimit returns a boolean if a field has been set.
func (o *CouponCreationJob) HasDiscountLimit() bool {
	if o != nil && o.DiscountLimit != nil {
		return true
	}

	return false
}

// SetDiscountLimit gets a reference to the given float32 and assigns it to the DiscountLimit field.
func (o *CouponCreationJob) SetDiscountLimit(v float32) {
	o.DiscountLimit = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CouponCreationJob) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetStartDateOk() (*time.Time, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CouponCreationJob) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CouponCreationJob) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *CouponCreationJob) GetExpiryDate() time.Time {
	if o == nil || o.ExpiryDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetExpiryDateOk() (*time.Time, bool) {
	if o == nil || o.ExpiryDate == nil {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *CouponCreationJob) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate != nil {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given time.Time and assigns it to the ExpiryDate field.
func (o *CouponCreationJob) SetExpiryDate(v time.Time) {
	o.ExpiryDate = &v
}

// GetNumberOfCoupons returns the NumberOfCoupons field value
func (o *CouponCreationJob) GetNumberOfCoupons() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfCoupons
}

// GetNumberOfCouponsOk returns a tuple with the NumberOfCoupons field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetNumberOfCouponsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfCoupons, true
}

// SetNumberOfCoupons sets field value
func (o *CouponCreationJob) SetNumberOfCoupons(v int32) {
	o.NumberOfCoupons = v
}

// GetCouponSettings returns the CouponSettings field value if set, zero value otherwise.
func (o *CouponCreationJob) GetCouponSettings() CodeGeneratorSettings {
	if o == nil || o.CouponSettings == nil {
		var ret CodeGeneratorSettings
		return ret
	}
	return *o.CouponSettings
}

// GetCouponSettingsOk returns a tuple with the CouponSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetCouponSettingsOk() (*CodeGeneratorSettings, bool) {
	if o == nil || o.CouponSettings == nil {
		return nil, false
	}
	return o.CouponSettings, true
}

// HasCouponSettings returns a boolean if a field has been set.
func (o *CouponCreationJob) HasCouponSettings() bool {
	if o != nil && o.CouponSettings != nil {
		return true
	}

	return false
}

// SetCouponSettings gets a reference to the given CodeGeneratorSettings and assigns it to the CouponSettings field.
func (o *CouponCreationJob) SetCouponSettings(v CodeGeneratorSettings) {
	o.CouponSettings = &v
}

// GetAttributes returns the Attributes field value
func (o *CouponCreationJob) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *CouponCreationJob) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetBatchId returns the BatchId field value
func (o *CouponCreationJob) GetBatchId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetBatchIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatchId, true
}

// SetBatchId sets field value
func (o *CouponCreationJob) SetBatchId(v string) {
	o.BatchId = v
}

// GetStatus returns the Status field value
func (o *CouponCreationJob) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CouponCreationJob) SetStatus(v string) {
	o.Status = v
}

// GetCreatedAmount returns the CreatedAmount field value
func (o *CouponCreationJob) GetCreatedAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAmount
}

// GetCreatedAmountOk returns a tuple with the CreatedAmount field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetCreatedAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAmount, true
}

// SetCreatedAmount sets field value
func (o *CouponCreationJob) SetCreatedAmount(v int32) {
	o.CreatedAmount = v
}

// GetFailCount returns the FailCount field value
func (o *CouponCreationJob) GetFailCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailCount
}

// GetFailCountOk returns a tuple with the FailCount field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetFailCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailCount, true
}

// SetFailCount sets field value
func (o *CouponCreationJob) SetFailCount(v int32) {
	o.FailCount = v
}

// GetErrors returns the Errors field value
func (o *CouponCreationJob) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetErrorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *CouponCreationJob) SetErrors(v []string) {
	o.Errors = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *CouponCreationJob) GetCreatedBy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetCreatedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *CouponCreationJob) SetCreatedBy(v int32) {
	o.CreatedBy = v
}

// GetCommunicated returns the Communicated field value
func (o *CouponCreationJob) GetCommunicated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Communicated
}

// GetCommunicatedOk returns a tuple with the Communicated field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetCommunicatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Communicated, true
}

// SetCommunicated sets field value
func (o *CouponCreationJob) SetCommunicated(v bool) {
	o.Communicated = v
}

// GetChunkExecutionCount returns the ChunkExecutionCount field value
func (o *CouponCreationJob) GetChunkExecutionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChunkExecutionCount
}

// GetChunkExecutionCountOk returns a tuple with the ChunkExecutionCount field value
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetChunkExecutionCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChunkExecutionCount, true
}

// SetChunkExecutionCount sets field value
func (o *CouponCreationJob) SetChunkExecutionCount(v int32) {
	o.ChunkExecutionCount = v
}

// GetChunkSize returns the ChunkSize field value if set, zero value otherwise.
func (o *CouponCreationJob) GetChunkSize() int32 {
	if o == nil || o.ChunkSize == nil {
		var ret int32
		return ret
	}
	return *o.ChunkSize
}

// GetChunkSizeOk returns a tuple with the ChunkSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponCreationJob) GetChunkSizeOk() (*int32, bool) {
	if o == nil || o.ChunkSize == nil {
		return nil, false
	}
	return o.ChunkSize, true
}

// HasChunkSize returns a boolean if a field has been set.
func (o *CouponCreationJob) HasChunkSize() bool {
	if o != nil && o.ChunkSize != nil {
		return true
	}

	return false
}

// SetChunkSize gets a reference to the given int32 and assigns it to the ChunkSize field.
func (o *CouponCreationJob) SetChunkSize(v int32) {
	o.ChunkSize = &v
}

func (o CouponCreationJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["campaignId"] = o.CampaignId
	}
	if true {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["usageLimit"] = o.UsageLimit
	}
	if o.DiscountLimit != nil {
		toSerialize["discountLimit"] = o.DiscountLimit
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.ExpiryDate != nil {
		toSerialize["expiryDate"] = o.ExpiryDate
	}
	if true {
		toSerialize["numberOfCoupons"] = o.NumberOfCoupons
	}
	if o.CouponSettings != nil {
		toSerialize["couponSettings"] = o.CouponSettings
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if true {
		toSerialize["batchId"] = o.BatchId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["createdAmount"] = o.CreatedAmount
	}
	if true {
		toSerialize["failCount"] = o.FailCount
	}
	if true {
		toSerialize["errors"] = o.Errors
	}
	if true {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if true {
		toSerialize["communicated"] = o.Communicated
	}
	if true {
		toSerialize["chunkExecutionCount"] = o.ChunkExecutionCount
	}
	if o.ChunkSize != nil {
		toSerialize["chunkSize"] = o.ChunkSize
	}
	return json.Marshal(toSerialize)
}

type NullableCouponCreationJob struct {
	value *CouponCreationJob
	isSet bool
}

func (v NullableCouponCreationJob) Get() *CouponCreationJob {
	return v.value
}

func (v *NullableCouponCreationJob) Set(val *CouponCreationJob) {
	v.value = val
	v.isSet = true
}

func (v NullableCouponCreationJob) IsSet() bool {
	return v.isSet
}

func (v *NullableCouponCreationJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCouponCreationJob(val *CouponCreationJob) *NullableCouponCreationJob {
	return &NullableCouponCreationJob{value: val, isSet: true}
}

func (v NullableCouponCreationJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCouponCreationJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


