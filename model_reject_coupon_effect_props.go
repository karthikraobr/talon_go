/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// RejectCouponEffectProps The properties specific to the \"rejectCoupon\" effect. This gets triggered whenever the coupon was rejected. See rejectionReason for more info on why.
type RejectCouponEffectProps struct {
	// The coupon code that was rejected.
	Value string `json:"value"`
	// The reason why this coupon was rejected.
	RejectionReason string `json:"rejectionReason"`
	// The index of the condition that caused the rejection of the coupon.
	ConditionIndex *int32 `json:"conditionIndex,omitempty"`
	// The index of the effect that caused the rejection of the coupon.
	EffectIndex *int32 `json:"effectIndex,omitempty"`
	// More details about the failure.
	Details *string `json:"details,omitempty"`
}

// NewRejectCouponEffectProps instantiates a new RejectCouponEffectProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRejectCouponEffectProps(value string, rejectionReason string) *RejectCouponEffectProps {
	this := RejectCouponEffectProps{}
	this.Value = value
	this.RejectionReason = rejectionReason
	return &this
}

// NewRejectCouponEffectPropsWithDefaults instantiates a new RejectCouponEffectProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRejectCouponEffectPropsWithDefaults() *RejectCouponEffectProps {
	this := RejectCouponEffectProps{}
	return &this
}

// GetValue returns the Value field value
func (o *RejectCouponEffectProps) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *RejectCouponEffectProps) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *RejectCouponEffectProps) SetValue(v string) {
	o.Value = v
}

// GetRejectionReason returns the RejectionReason field value
func (o *RejectCouponEffectProps) GetRejectionReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RejectionReason
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value
// and a boolean to check if the value has been set.
func (o *RejectCouponEffectProps) GetRejectionReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RejectionReason, true
}

// SetRejectionReason sets field value
func (o *RejectCouponEffectProps) SetRejectionReason(v string) {
	o.RejectionReason = v
}

// GetConditionIndex returns the ConditionIndex field value if set, zero value otherwise.
func (o *RejectCouponEffectProps) GetConditionIndex() int32 {
	if o == nil || o.ConditionIndex == nil {
		var ret int32
		return ret
	}
	return *o.ConditionIndex
}

// GetConditionIndexOk returns a tuple with the ConditionIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RejectCouponEffectProps) GetConditionIndexOk() (*int32, bool) {
	if o == nil || o.ConditionIndex == nil {
		return nil, false
	}
	return o.ConditionIndex, true
}

// HasConditionIndex returns a boolean if a field has been set.
func (o *RejectCouponEffectProps) HasConditionIndex() bool {
	if o != nil && o.ConditionIndex != nil {
		return true
	}

	return false
}

// SetConditionIndex gets a reference to the given int32 and assigns it to the ConditionIndex field.
func (o *RejectCouponEffectProps) SetConditionIndex(v int32) {
	o.ConditionIndex = &v
}

// GetEffectIndex returns the EffectIndex field value if set, zero value otherwise.
func (o *RejectCouponEffectProps) GetEffectIndex() int32 {
	if o == nil || o.EffectIndex == nil {
		var ret int32
		return ret
	}
	return *o.EffectIndex
}

// GetEffectIndexOk returns a tuple with the EffectIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RejectCouponEffectProps) GetEffectIndexOk() (*int32, bool) {
	if o == nil || o.EffectIndex == nil {
		return nil, false
	}
	return o.EffectIndex, true
}

// HasEffectIndex returns a boolean if a field has been set.
func (o *RejectCouponEffectProps) HasEffectIndex() bool {
	if o != nil && o.EffectIndex != nil {
		return true
	}

	return false
}

// SetEffectIndex gets a reference to the given int32 and assigns it to the EffectIndex field.
func (o *RejectCouponEffectProps) SetEffectIndex(v int32) {
	o.EffectIndex = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *RejectCouponEffectProps) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RejectCouponEffectProps) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *RejectCouponEffectProps) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *RejectCouponEffectProps) SetDetails(v string) {
	o.Details = &v
}

func (o RejectCouponEffectProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["rejectionReason"] = o.RejectionReason
	}
	if o.ConditionIndex != nil {
		toSerialize["conditionIndex"] = o.ConditionIndex
	}
	if o.EffectIndex != nil {
		toSerialize["effectIndex"] = o.EffectIndex
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableRejectCouponEffectProps struct {
	value *RejectCouponEffectProps
	isSet bool
}

func (v NullableRejectCouponEffectProps) Get() *RejectCouponEffectProps {
	return v.value
}

func (v *NullableRejectCouponEffectProps) Set(val *RejectCouponEffectProps) {
	v.value = val
	v.isSet = true
}

func (v NullableRejectCouponEffectProps) IsSet() bool {
	return v.isSet
}

func (v *NullableRejectCouponEffectProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRejectCouponEffectProps(val *RejectCouponEffectProps) *NullableRejectCouponEffectProps {
	return &NullableRejectCouponEffectProps{value: val, isSet: true}
}

func (v NullableRejectCouponEffectProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRejectCouponEffectProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


