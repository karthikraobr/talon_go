/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
	"time"
)

// LoyaltyMembership struct for LoyaltyMembership
type LoyaltyMembership struct {
	// The moment in which the loyalty program was joined.
	Joined *time.Time `json:"joined,omitempty"`
	// The ID of the loyalty program belonging to this entity.
	LoyaltyProgramId int32 `json:"loyaltyProgramId"`
}

// NewLoyaltyMembership instantiates a new LoyaltyMembership object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoyaltyMembership(loyaltyProgramId int32) *LoyaltyMembership {
	this := LoyaltyMembership{}
	this.LoyaltyProgramId = loyaltyProgramId
	return &this
}

// NewLoyaltyMembershipWithDefaults instantiates a new LoyaltyMembership object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoyaltyMembershipWithDefaults() *LoyaltyMembership {
	this := LoyaltyMembership{}
	return &this
}

// GetJoined returns the Joined field value if set, zero value otherwise.
func (o *LoyaltyMembership) GetJoined() time.Time {
	if o == nil || o.Joined == nil {
		var ret time.Time
		return ret
	}
	return *o.Joined
}

// GetJoinedOk returns a tuple with the Joined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyMembership) GetJoinedOk() (*time.Time, bool) {
	if o == nil || o.Joined == nil {
		return nil, false
	}
	return o.Joined, true
}

// HasJoined returns a boolean if a field has been set.
func (o *LoyaltyMembership) HasJoined() bool {
	if o != nil && o.Joined != nil {
		return true
	}

	return false
}

// SetJoined gets a reference to the given time.Time and assigns it to the Joined field.
func (o *LoyaltyMembership) SetJoined(v time.Time) {
	o.Joined = &v
}

// GetLoyaltyProgramId returns the LoyaltyProgramId field value
func (o *LoyaltyMembership) GetLoyaltyProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LoyaltyProgramId
}

// GetLoyaltyProgramIdOk returns a tuple with the LoyaltyProgramId field value
// and a boolean to check if the value has been set.
func (o *LoyaltyMembership) GetLoyaltyProgramIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoyaltyProgramId, true
}

// SetLoyaltyProgramId sets field value
func (o *LoyaltyMembership) SetLoyaltyProgramId(v int32) {
	o.LoyaltyProgramId = v
}

func (o LoyaltyMembership) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Joined != nil {
		toSerialize["joined"] = o.Joined
	}
	if true {
		toSerialize["loyaltyProgramId"] = o.LoyaltyProgramId
	}
	return json.Marshal(toSerialize)
}

type NullableLoyaltyMembership struct {
	value *LoyaltyMembership
	isSet bool
}

func (v NullableLoyaltyMembership) Get() *LoyaltyMembership {
	return v.value
}

func (v *NullableLoyaltyMembership) Set(val *LoyaltyMembership) {
	v.value = val
	v.isSet = true
}

func (v NullableLoyaltyMembership) IsSet() bool {
	return v.isSet
}

func (v *NullableLoyaltyMembership) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoyaltyMembership(val *LoyaltyMembership) *NullableLoyaltyMembership {
	return &NullableLoyaltyMembership{value: val, isSet: true}
}

func (v NullableLoyaltyMembership) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoyaltyMembership) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


