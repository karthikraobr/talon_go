/*
Integration API reference docs

Use the Integration API to push data to and retrieve data from Talon.One in real time. For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)  For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion rules. You can also create custom events to track specific actions that do not fit into the session data model.  Ensure you [authenticate](#section/Authentication) to make requests to the API.  <div class=\"redoc-section\">   <p class=\"title\">Are you looking for a different API?</p>    If you need the API to:    - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).   - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).  </div>  # Authentication  <SecurityDefinitions /> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package talon

import (
	"encoding/json"
)

// LoyaltyLedgerTransactions List of loyalty ledger transactions.
type LoyaltyLedgerTransactions struct {
	// List of transaction entries from a loyalty ledger.
	Transactions []LoyaltyLedgerEntry `json:"transactions,omitempty"`
}

// NewLoyaltyLedgerTransactions instantiates a new LoyaltyLedgerTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoyaltyLedgerTransactions() *LoyaltyLedgerTransactions {
	this := LoyaltyLedgerTransactions{}
	return &this
}

// NewLoyaltyLedgerTransactionsWithDefaults instantiates a new LoyaltyLedgerTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoyaltyLedgerTransactionsWithDefaults() *LoyaltyLedgerTransactions {
	this := LoyaltyLedgerTransactions{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *LoyaltyLedgerTransactions) GetTransactions() []LoyaltyLedgerEntry {
	if o == nil || o.Transactions == nil {
		var ret []LoyaltyLedgerEntry
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyLedgerTransactions) GetTransactionsOk() ([]LoyaltyLedgerEntry, bool) {
	if o == nil || o.Transactions == nil {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *LoyaltyLedgerTransactions) HasTransactions() bool {
	if o != nil && o.Transactions != nil {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []LoyaltyLedgerEntry and assigns it to the Transactions field.
func (o *LoyaltyLedgerTransactions) SetTransactions(v []LoyaltyLedgerEntry) {
	o.Transactions = v
}

func (o LoyaltyLedgerTransactions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transactions != nil {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableLoyaltyLedgerTransactions struct {
	value *LoyaltyLedgerTransactions
	isSet bool
}

func (v NullableLoyaltyLedgerTransactions) Get() *LoyaltyLedgerTransactions {
	return v.value
}

func (v *NullableLoyaltyLedgerTransactions) Set(val *LoyaltyLedgerTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableLoyaltyLedgerTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableLoyaltyLedgerTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoyaltyLedgerTransactions(val *LoyaltyLedgerTransactions) *NullableLoyaltyLedgerTransactions {
	return &NullableLoyaltyLedgerTransactions{value: val, isSet: true}
}

func (v NullableLoyaltyLedgerTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoyaltyLedgerTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


